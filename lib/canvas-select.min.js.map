{"version":3,"file":"canvas-select.min.js","sources":["../src/tools.ts","../src/shape/Shape.ts","../src/index.ts","../src/shape/Rect.ts","../src/shape/Polygon.ts","../src/shape/Dot.ts","../src/EventBus.ts","../src/shape/Line.ts","../src/shape/Circle.ts"],"sourcesContent":["export function createUuid(): string {\r\n  const s: any[] = [];\r\n  const hexDigits = \"0123456789abcdef\";\r\n  for (let i = 0; i < 36; i++) {\r\n    const m = Math.floor(Math.random() * 0x10);\r\n    s[i] = hexDigits.slice(m, m + 1);\r\n  }\r\n  s[14] = \"4\";\r\n  const n = (s[19] & 0x3) | 0x8;\r\n  s[19] = hexDigits.slice(n, n + 1);\r\n  s[8] = s[13] = s[18] = s[23] = \"-\";\r\n  const uuid = s.join(\"\");\r\n  return uuid;\r\n}\r\n\r\n/**\r\n * 判断图形是否符合嵌套关系, 业务需求：只需要判断shape2所有的点是否都在shape1内部即可\r\n * @param shape1 参数1\r\n * @param shape2 参数2\r\n * @reutrn Boolean 符合条件返回true 否则返回false\r\n */\r\n\r\nexport function isNested(shape1: any, shape2: any): boolean {\r\n  if (shape1.type === 1 && shape2.type === 1) {\r\n    // 矩形和矩形的判断逻辑\r\n    const [[x1, y1], [x2, y2]] = shape1.coor;\r\n    const [[x3, y3], [x4, y4]] = shape2.coor;\r\n\r\n    // if (x1 >= x3 && y1 >= y3 && x2 <= x4 && y2 <= y4) {\r\n    //   return true; // shape1 嵌套在 shape2 内部\r\n    // } else\r\n    if (x1 <= x3 && y1 <= y3 && x2 >= x4 && y2 >= y4) {\r\n      return true; // shape2 嵌套在 shape1 内部\r\n    } else {\r\n      return false; // 两个矩形没有嵌套关系\r\n    }\r\n  } else if (shape1.type === 1 && shape2.type === 2) {\r\n    // 矩形和多边形的判断逻辑，确保多边形所有的坐标点都在矩形里面\r\n    const [[x1, y1], [x2, y2]] = shape1.coor;\r\n    const vertices = shape2.coor;\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const [x, y] = vertices[i];\r\n      if (x < x1 || x > x2 || y < y1 || y > y2) {\r\n        return false; // 多边形的顶点在矩形外部，不嵌套\r\n      }\r\n    }\r\n\r\n    return true; // 所有顶点都在矩形内部，嵌套关系成立\r\n  } else if (shape1.type === 2 && shape2.type === 1) {\r\n    // 多边形和矩形的判断逻辑，确保矩形的所有坐标点都在多边形里面\r\n    const vertices = shape2.coor; // 矩形的顶点坐标\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const [x, y] = vertices[i];\r\n      if (!isPointInPolygon(x, y, shape1.coor)) {\r\n        return false; // 有一个坐标点不在多边形范围内，返回false\r\n      }\r\n    }\r\n\r\n    return true; // 所有坐标点都在多边形内部，返回true\r\n  } else if (shape1.type === 2 && shape2.type === 2) {\r\n    // 多边形和多边形的判断逻辑\r\n    const vertices1 = shape1.coor;\r\n    const vertices2 = shape2.coor;\r\n\r\n    for (let i = 0; i < vertices2.length; i++) {\r\n      const [x, y] = vertices2[i];\r\n      if (!isPointInPolygon(x, y, vertices1)) {\r\n        return false; // 多边形2的顶点不都在多边形1内部，不嵌套\r\n      }\r\n    }\r\n\r\n    return true; // 有坐标点都在多边形内部，返回true\r\n  }\r\n}\r\n\r\nfunction isPointInPolygon(x: number, y: number, vertices: any) {\r\n  let inside = false;\r\n  const n = vertices.length;\r\n\r\n  for (let i = 0, j = n - 1; i < n; j = i++) {\r\n    const xi = vertices[i][0];\r\n    const yi = vertices[i][1];\r\n    const xj = vertices[j][0];\r\n    const yj = vertices[j][1];\r\n\r\n    if (yi > y !== yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi) {\r\n      inside = !inside;\r\n    }\r\n  }\r\n\r\n  return inside;\r\n}\r\n","import { createUuid } from \"../tools\"\r\n\r\ninterface ShapeProp {\r\n    type: number\r\n    [key: string]: any\r\n}\r\nexport default class Shape {\r\n    /** 标签 */\r\n    public label: string = ''\r\n    /** 是否隐藏标签 */\r\n    public hideLabel: boolean\r\n    /** 坐标 */\r\n    public coor: any[] = []\r\n    /** 边线颜色 */\r\n    public strokeStyle: string\r\n    /** 填充颜色 */\r\n    public fillStyle: string\r\n    /** 边线宽度 */\r\n    public lineWidth: number\r\n    /** 标签填充颜色 */\r\n    public labelFillStyle: string\r\n    /** 标签文字颜色 */\r\n    public textFillStyle: string\r\n    /** 标签文字字体 */\r\n    public labelFont: string\r\n    /** 1 矩形，2 多边形，3 点，4 折线，5 圆 */\r\n    public type: number // 形状\r\n    /** 当前是否处于活动状态 */\r\n    public active: boolean = false\r\n    /** 当前是否处于创建状态 */\r\n    public creating: boolean = false\r\n    /** 当前是否处于拖拽状态 */\r\n    public dragging: boolean = false\r\n    /** 索引 */\r\n    public index: number\r\n    /** 唯一标识 */\r\n    public uuid: string = createUuid()\r\n    /** 向上展示label */\r\n    public labelUp: boolean\r\n    constructor(item: ShapeProp, index: number) {\r\n        this.index = index\r\n        Object.assign(this, item)\r\n    }\r\n}\r\n","import Rect from './shape/Rect';\r\nimport Polygon from './shape/Polygon';\r\nimport Dot from './shape/Dot';\r\nimport EventBus from './EventBus';\r\nimport Line from './shape/Line';\r\nimport Circle from './shape/Circle';\r\nimport pkg from '../package.json';\r\nimport { isNested } from \"./tools\";\r\n\r\nexport type Point = [number, number];\r\nexport type AllShape = Rect | Polygon | Dot | Line | Circle;\r\nenum Shape {\r\n    None,\r\n    Rect,\r\n    Polygon,\r\n    Dot,\r\n    Line,\r\n    Circle\r\n}\r\nexport default class CanvasSelect extends EventBus {\r\n    /** 当前版本 */\r\n    version = pkg.version;\r\n    /** 只读模式，画布不允许任何交互 */\r\n    lock: boolean = false;\r\n    /** 只读模式，仅支持查看 */\r\n    readonly: boolean = false;\r\n    /** 最小矩形宽度 */\r\n    MIN_WIDTH = 10;\r\n    /** 最小矩形高度 */\r\n    MIN_HEIGHT = 10;\r\n    /** 最小圆形半径 */\r\n    MIN_RADIUS = 5;\r\n    /** 边线颜色 */\r\n    strokeStyle = '#0f0';\r\n    /** 填充颜色 */\r\n    fillStyle = 'rgba(0, 0, 255,0.1)';\r\n    /** 边线宽度 */\r\n    lineWidth = 1;\r\n    /** 当前选中的标注边线颜色 */\r\n    activeStrokeStyle = '#f00';\r\n    /** 当前选中的标注填充颜色 */\r\n    activeFillStyle = 'rgba(255, 0, 0,0.1)';\r\n    /** 控制点边线颜色 */\r\n    ctrlStrokeStyle = '#000';\r\n    /** 控制点填充颜色 */\r\n    ctrlFillStyle = '#fff';\r\n    /** 控制点半径 */\r\n    ctrlRadius = 3;\r\n    /** 是否隐藏标签 */\r\n    hideLabel = false;\r\n    /** 标签背景填充颜色 */\r\n    labelFillStyle = '#fff';\r\n    /** 标签字体 */\r\n    labelFont = '10px sans-serif';\r\n    /** 标签文字颜色 */\r\n    textFillStyle = '#000';\r\n    /** 标签字符最大长度，超出使用省略号 */\r\n    labelMaxLen = 10;\r\n    /** 画布宽度 */\r\n    WIDTH = 0;\r\n    /** 画布高度 */\r\n    HEIGHT = 0;\r\n\r\n    canvas: HTMLCanvasElement;\r\n\r\n    ctx: CanvasRenderingContext2D;\r\n    /** 所有标注数据 */\r\n    dataset: AllShape[] = [];\r\n\r\n    offScreen: HTMLCanvasElement;\r\n\r\n    offScreenCtx: CanvasRenderingContext2D;\r\n    /** 记录锚点距离 */\r\n    remmber: number[][];\r\n    /** 记录鼠标位置 */\r\n    mouse: Point;\r\n    /** 记录背景图鼠标位移 */\r\n    remmberOrigin: number[] = [0, 0];\r\n    /** 0 不创建，1 矩形，2 多边形，3 点，4 折线，5 圆 */\r\n    createType: Shape = Shape.None; //\r\n    /** 控制点索引 */\r\n    ctrlIndex = -1;\r\n    /** 背景图片 */\r\n    image: HTMLImageElement = new Image();\r\n    /** 图片原始宽度 */\r\n    IMAGE_ORIGIN_WIDTH: number;\r\n    /** 图片缩放宽度 */\r\n    IMAGE_WIDTH = 0;\r\n    /** 图片原始高度 */\r\n    IMAGE_ORIGIN_HEIGHT = 0;\r\n    /** 图片缩放高度 */\r\n    IMAGE_HEIGHT = 0;\r\n    /** 原点x */\r\n    originX = 0;\r\n    /** 原点y */\r\n    originY = 0;\r\n    /** 缩放步长 */\r\n    scaleStep = 0;\r\n    /** 滚动缩放 */\r\n    scrollZoom = true;\r\n\r\n    private timer: any;\r\n    /** 最小touch双击时间 */\r\n    dblTouch = 300;\r\n    /** 记录touch双击开始时间 */\r\n    dblTouchStore = 0; //\r\n    /** 这个选项可以帮助浏览器进行内部优化 */\r\n    alpha = true;\r\n    /** 专注模式 */\r\n    focusMode = false;\r\n    /** 记录当前事件 */\r\n    private evt: MouseEvent | TouchEvent | KeyboardEvent;\r\n    /** 触控缩放时记录上一次两点距离 */\r\n    scaleTouchStore = 0;\r\n    /** 当前是否为双指触控 */\r\n    isTouch2 = false;\r\n    isMobile = navigator.userAgent.includes('Mobile');\r\n    /** 向上展示label */\r\n    labelUp = false;\r\n    private ctrlKey = false;\r\n    /**\r\n     * @param el Valid CSS selector string, or DOM\r\n     * @param src image src\r\n     */\r\n    constructor(el: HTMLCanvasElement | string, src?: string) {\r\n        super();\r\n        this.handleLoad = this.handleLoad.bind(this);\r\n        this.handleContextmenu = this.handleContextmenu.bind(this);\r\n        this.handleMousewheel = this.handleMousewheel.bind(this);\r\n        this.handleMouseDown = this.handleMouseDown.bind(this);\r\n        this.handleMouseMove = this.handleMouseMove.bind(this);\r\n        this.handleMouseUp = this.handleMouseUp.bind(this);\r\n        this.handleDblclick = this.handleDblclick.bind(this);\r\n        this.handleKeyup = this.handleKeyup.bind(this);\r\n        this.handleKeydown = this.handleKeydown.bind(this);\r\n        const container = typeof el === 'string' ? document.querySelector(el) : el;\r\n        if (container instanceof HTMLCanvasElement) {\r\n            this.canvas = container;\r\n            this.offScreen = document.createElement('canvas');\r\n            this.initSetting();\r\n            this.initEvents();\r\n            src && this.setImage(src);\r\n        } else {\r\n            console.warn('HTMLCanvasElement is required!');\r\n        }\r\n    }\r\n\r\n    /** 当前当前选中的标注 */\r\n    get activeShape() {\r\n        return this.dataset.find(x => x.active) || {} as any;\r\n    }\r\n\r\n    /** 当前缩放比例 */\r\n    get scale() {\r\n        if (this.IMAGE_ORIGIN_WIDTH && this.IMAGE_WIDTH) {\r\n            return this.IMAGE_WIDTH / this.IMAGE_ORIGIN_WIDTH;\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    /** 图片最小边尺寸 */\r\n    get imageMin() {\r\n        return Math.min(this.IMAGE_WIDTH, this.IMAGE_HEIGHT);\r\n    }\r\n\r\n    /** 图片原始最大边尺寸 */\r\n    get imageOriginMax() {\r\n        return Math.max(this.IMAGE_ORIGIN_WIDTH, this.IMAGE_ORIGIN_HEIGHT);\r\n    }\r\n\r\n    /** 合成事件 */\r\n    private mergeEvent(e: TouchEvent | MouseEvent) {\r\n        let mouseX = 0;\r\n        let mouseY = 0;\r\n        let mouseCX = 0;\r\n        let mouseCY = 0;\r\n        if (this.isMobile) {\r\n            const { clientX, clientY } = (e as TouchEvent).touches[0];\r\n            const target = e.target as HTMLCanvasElement;\r\n            const { left, top } = target.getBoundingClientRect();\r\n            mouseX = Math.round(clientX - left);\r\n            mouseY = Math.round(clientY - top);\r\n            if ((e as TouchEvent).touches.length === 2) {\r\n                const { clientX: clientX1 = 0, clientY: clientY1 = 0 } = (e as TouchEvent).touches[1] || {};\r\n                mouseCX = Math.round(Math.abs((clientX1 - clientX) / 2 + clientX) - left);\r\n                mouseCY = Math.round(Math.abs((clientY1 - clientY) / 2 + clientY) - top);\r\n            }\r\n        } else {\r\n            mouseX = (e as MouseEvent).offsetX;\r\n            mouseY = (e as MouseEvent).offsetY;\r\n        }\r\n        return { ...e, mouseX, mouseY, mouseCX, mouseCY };\r\n    }\r\n\r\n    private handleLoad() {\r\n        this.emit('load', this.image.src);\r\n        this.IMAGE_ORIGIN_WIDTH = this.IMAGE_WIDTH = this.image.width;\r\n        this.IMAGE_ORIGIN_HEIGHT = this.IMAGE_HEIGHT = this.image.height;\r\n        this.fitZoom();\r\n    }\r\n\r\n    private handleContextmenu(e: MouseEvent) {\r\n        e.preventDefault();\r\n        this.evt = e;\r\n        if (this.lock) return;\r\n    }\r\n\r\n    private handleMousewheel(e: WheelEvent) {\r\n        e.stopPropagation();\r\n        this.evt = e;\r\n        if (this.lock || !this.scrollZoom) return;\r\n        const { mouseX, mouseY } = this.mergeEvent(e);\r\n        this.mouse = [mouseX, mouseY];\r\n        this.setScale(e.deltaY < 0, true);\r\n    }\r\n\r\n    private handleMouseDown(e: MouseEvent | TouchEvent) {\r\n        e.stopPropagation();\r\n        this.evt = e;\r\n        if (this.lock) return;\r\n        const { mouseX, mouseY, mouseCX, mouseCY } = this.mergeEvent(e);\r\n        const offsetX = Math.round(mouseX / this.scale);\r\n        const offsetY = Math.round(mouseY / this.scale);\r\n        this.mouse = this.isMobile && (e as TouchEvent).touches.length === 2 ? [mouseCX, mouseCY] : [mouseX, mouseY];\r\n        this.remmberOrigin = [mouseX - this.originX, mouseY - this.originY];\r\n        if ((!this.isMobile && (e as MouseEvent).buttons === 1) || (this.isMobile && (e as TouchEvent).touches.length === 1)) { // 鼠标左键\r\n            const ctrls = this.activeShape.ctrlsData || [];\r\n            this.ctrlIndex = ctrls.findIndex((coor: Point) => this.isPointInCircle(this.mouse, coor, this.ctrlRadius));\r\n            if (this.ctrlIndex > -1 && !this.readonly) { // 点击到控制点\r\n                const [x0, y0] = ctrls[this.ctrlIndex];\r\n                if (this.activeShape.type === Shape.Polygon && this.activeShape.coor.length > 2 && this.ctrlIndex === 0) {\r\n                    this.handleDblclick(e)\r\n                }\r\n                this.remmber = [[offsetX - x0, offsetY - y0]];\r\n            } else if (this.isInBackground(e)) {\r\n                if (this.activeShape.creating && !this.readonly) { // 创建中\r\n                    if ([Shape.Polygon, Shape.Line].includes(this.activeShape.type)) {\r\n                        const [x, y] = this.activeShape.coor[this.activeShape.coor.length - 1];\r\n                        if (x !== offsetX && y !== offsetY) {\r\n                            const nx = Math.round(offsetX - this.originX / this.scale);\r\n                            const ny = Math.round(offsetY - this.originY / this.scale);\r\n                            this.activeShape.coor.push([nx, ny]);\r\n                        }\r\n                    }\r\n                } else if (this.createType !== Shape.None && !this.readonly && !this.ctrlKey) { // 开始创建\r\n                    let newShape;\r\n                    const nx = Math.round(offsetX - this.originX / this.scale);\r\n                    const ny = Math.round(offsetY - this.originY / this.scale);\r\n                    const curPoint: Point = [nx, ny];\r\n                    switch (this.createType) {\r\n                        case Shape.Rect:\r\n                            newShape = new Rect({ coor: [curPoint, curPoint] }, this.dataset.length);\r\n                            newShape.creating = true;\r\n                            break;\r\n                        case Shape.Polygon:\r\n                            newShape = new Polygon({ coor: [curPoint] }, this.dataset.length);\r\n                            newShape.creating = true;\r\n                            break;\r\n                        case Shape.Dot:\r\n                            newShape = new Dot({ coor: curPoint }, this.dataset.length);\r\n                            this.emit('add', newShape);\r\n                            break;\r\n                        case Shape.Line:\r\n                            newShape = new Line({ coor: [curPoint] }, this.dataset.length);\r\n                            newShape.creating = true;\r\n                            break;\r\n                        case Shape.Circle:\r\n                            newShape = new Circle({ coor: curPoint }, this.dataset.length);\r\n                            newShape.creating = true;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    this.dataset.forEach((sp) => { sp.active = false; });\r\n                    newShape.active = true;\r\n                    this.dataset.push(newShape);\r\n                } else {\r\n                    // 是否点击到形状\r\n                    const [hitShapeIndex, hitShape] = this.hitOnShape(this.mouse);\r\n                    if (hitShapeIndex > -1) {\r\n                        hitShape.dragging = true;\r\n                        this.dataset.forEach((item, i) => item.active = i === hitShapeIndex);\r\n                        this.dataset.splice(hitShapeIndex, 1);\r\n                        this.dataset.push(hitShape);\r\n                        if (!this.readonly) {\r\n                            this.remmber = [];\r\n                            if ([Shape.Dot, Shape.Circle].includes(hitShape.type)) {\r\n                                const [x, y] = hitShape.coor;\r\n                                this.remmber = [[offsetX - x, offsetY - y]];\r\n                            } else {\r\n                                hitShape.coor.forEach((pt: any) => {\r\n                                    this.remmber.push([offsetX - pt[0], offsetY - pt[1]]);\r\n                                });\r\n                            }\r\n                        }\r\n                        this.emit('select', hitShape);\r\n                    } else {\r\n                        this.activeShape.active = false;\r\n                        this.dataset.sort((a, b) => a.index - b.index);\r\n                        this.emit('select', null);\r\n                    }\r\n                }\r\n                this.update();\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleMouseMove(e: MouseEvent | TouchEvent) {\r\n        e.stopPropagation();\r\n        this.evt = e;\r\n        if (this.lock) return;\r\n        const { mouseX, mouseY, mouseCX, mouseCY } = this.mergeEvent(e);\r\n        const offsetX = Math.round(mouseX / this.scale);\r\n        const offsetY = Math.round(mouseY / this.scale);\r\n        this.mouse = this.isMobile && (e as TouchEvent).touches.length === 2 ? [mouseCX, mouseCY] : [mouseX, mouseY];\r\n        if (((!this.isMobile && (e as MouseEvent).buttons === 1) || (this.isMobile && (e as TouchEvent).touches.length === 1)) && this.activeShape.type) {\r\n            if (this.ctrlIndex > -1 && this.remmber.length && (this.isInBackground(e) || this.activeShape.type === Shape.Circle)) {\r\n                const [[x, y]] = this.remmber;\r\n                // resize矩形\r\n                if (this.activeShape.type === Shape.Rect) {\r\n                    const [[x0, y0], [x1, y1]] = this.activeShape.coor;\r\n                    let coor: Point[] = [];\r\n                    switch (this.ctrlIndex) {\r\n                        case 0:\r\n                            coor = [[offsetX - x, offsetY - y], [x1, y1]];\r\n                            break;\r\n                        case 1:\r\n                            coor = [[x0, offsetY - y], [x1, y1]];\r\n                            break;\r\n                        case 2:\r\n                            coor = [[x0, offsetY - y], [offsetX - x, y1]];\r\n                            break;\r\n                        case 3:\r\n                            coor = [[x0, y0], [offsetX - x, y1]];\r\n                            break;\r\n                        case 4:\r\n                            coor = [[x0, y0], [offsetX - x, offsetY - y]];\r\n                            break;\r\n                        case 5:\r\n                            coor = [[x0, y0], [x1, offsetY - y]];\r\n                            break;\r\n                        case 6:\r\n                            coor = [[offsetX - x, y0], [x1, offsetY - y]];\r\n                            break;\r\n                        case 7:\r\n                            coor = [[offsetX - x, y0], [x1, y1]];\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    let [[a0, b0], [a1, b1]] = coor;\r\n                    if (\r\n                        a0 < 0 ||\r\n                        a1 < 0 ||\r\n                        b0 < 0 ||\r\n                        b1 < 0 ||\r\n                        a1 > this.IMAGE_ORIGIN_WIDTH ||\r\n                        b1 > this.IMAGE_ORIGIN_HEIGHT\r\n                    ) {\r\n                        // 偶然触发 超出边界处理\r\n                        a0 < 0 && (a0 = 0);\r\n                        a1 < 0 && (a1 = 0);\r\n                        b0 < 0 && (b0 = 0);\r\n                        b1 < 0 && (b1 = 0);\r\n                        if (a1 > this.IMAGE_ORIGIN_WIDTH) {\r\n                            a1 = this.IMAGE_ORIGIN_WIDTH;\r\n                        }\r\n                        if (b1 > this.IMAGE_ORIGIN_HEIGHT) {\r\n                            b1 = this.IMAGE_ORIGIN_HEIGHT;\r\n                        }\r\n                    }\r\n\r\n                    if (a1 - a0 >= this.MIN_WIDTH && b1 - b0 >= this.MIN_HEIGHT) {\r\n                        this.activeShape.coor = [[a0, b0], [a1, b1]];\r\n                    } else {\r\n                        this.emit('warn', `Width cannot be less than ${this.MIN_WIDTH},Height cannot be less than${this.MIN_HEIGHT}。`);\r\n                    }\r\n                } else if ([Shape.Polygon, Shape.Line].includes(this.activeShape.type)) {\r\n                    const nx = Math.round(offsetX - this.originX / this.scale);\r\n                    const ny = Math.round(offsetY - this.originY / this.scale);\r\n                    const newPoint = [nx, ny];\r\n                    this.activeShape.coor.splice(this.ctrlIndex, 1, newPoint);\r\n                } else if (this.activeShape.type === Shape.Circle) {\r\n                    const nx = Math.round(offsetX - this.originX / this.scale);\r\n                    const newRadius = nx - this.activeShape.coor[0];\r\n                    if (newRadius >= this.MIN_RADIUS) this.activeShape.radius = newRadius;\r\n                }\r\n            } else if (this.activeShape.dragging && !this.readonly) { // 拖拽\r\n                let coor = [];\r\n                let noLimit = true;\r\n                const w = this.IMAGE_ORIGIN_WIDTH || this.WIDTH;\r\n                const h = this.IMAGE_ORIGIN_HEIGHT || this.HEIGHT;\r\n                if ([Shape.Dot, Shape.Circle].includes(this.activeShape.type)) {\r\n                    const [t1, t2] = this.remmber[0];\r\n                    const x = offsetX - t1;\r\n                    const y = offsetY - t2;\r\n                    if (x < 0 || x > w || y < 0 || y > h) noLimit = false;\r\n                    coor = [x, y];\r\n                } else {\r\n                    for (let i = 0; i < this.activeShape.coor.length; i++) {\r\n                        const tar = this.remmber[i];\r\n                        const x = offsetX - tar[0];\r\n                        const y = offsetY - tar[1];\r\n                        if (x < 0 || x > w || y < 0 || y > h) noLimit = false;\r\n                        coor.push([x, y]);\r\n                    }\r\n                }\r\n                if (noLimit) this.activeShape.coor = coor;\r\n            } else if (this.activeShape.creating && this.isInBackground(e)) {\r\n                const x = Math.round(offsetX - this.originX / this.scale);\r\n                const y = Math.round(offsetY - this.originY / this.scale);\r\n                // 创建矩形\r\n                if (this.activeShape.type === Shape.Rect) {\r\n                    this.activeShape.coor.splice(1, 1, [x, y]);\r\n                } else if (this.activeShape.type === Shape.Circle) {\r\n                    const [x0, y0] = this.activeShape.coor;\r\n                    const r = Math.sqrt((x0 - x) ** 2 + (y0 - y) ** 2);\r\n                    this.activeShape.radius = r;\r\n                }\r\n            }\r\n            this.update();\r\n        } else if ([Shape.Polygon, Shape.Line].includes(this.activeShape.type) && this.activeShape.creating) {\r\n            // 多边形添加点\r\n            this.update();\r\n        } else if ((!this.isMobile && (e as MouseEvent).buttons === 2 && (e as MouseEvent).which === 3) || (this.isMobile && (e as TouchEvent).touches.length === 1 && !this.isTouch2)) {\r\n            // 拖动背景\r\n            this.originX = Math.round(mouseX - this.remmberOrigin[0]);\r\n            this.originY = Math.round(mouseY - this.remmberOrigin[1]);\r\n            this.update();\r\n        } else if (this.isMobile && (e as TouchEvent).touches.length === 2) {\r\n            this.isTouch2 = true;\r\n            const touch0 = (e as TouchEvent).touches[0];\r\n            const touch1 = (e as TouchEvent).touches[1];\r\n            const cur = this.scaleTouchStore;\r\n            this.scaleTouchStore = Math.abs((touch1.clientX - touch0.clientX) * (touch1.clientY - touch0.clientY));\r\n            this.setScale(this.scaleTouchStore > cur, true);\r\n        }\r\n    }\r\n\r\n    private handleMouseUp(e: MouseEvent | TouchEvent) {\r\n        e.stopPropagation();\r\n        this.evt = e;\r\n        if (this.lock) return;\r\n        if (this.isMobile) {\r\n            if ((e as TouchEvent).touches.length === 0) {\r\n                this.isTouch2 = false;\r\n            }\r\n            if ((Date.now() - this.dblTouchStore) < this.dblTouch) {\r\n                this.handleDblclick(e);\r\n                return;\r\n            }\r\n            this.dblTouchStore = Date.now();\r\n        }\r\n        this.remmber = [];\r\n        if (this.activeShape.type !== Shape.None && !this.ctrlKey) {\r\n            this.activeShape.dragging = false;\r\n            if (this.activeShape.creating) {\r\n                if (this.activeShape.type === Shape.Rect) {\r\n                    const [[x0, y0], [x1, y1]] = this.activeShape.coor;\r\n                    if (Math.abs(x0 - x1) < this.MIN_WIDTH || Math.abs(y0 - y1) < this.MIN_HEIGHT) {\r\n                        this.dataset.pop();\r\n                        this.emit('warn', `Width cannot be less than ${this.MIN_WIDTH},Height cannot be less than ${this.MIN_HEIGHT}`);\r\n                    } else {\r\n                        this.activeShape.coor = [[Math.min(x0, x1), Math.min(y0, y1)], [Math.max(x0, x1), Math.max(y0, y1)]];\r\n                        this.activeShape.creating = false;\r\n                        this.emit('add', this.activeShape);\r\n                    }\r\n                } else if (this.activeShape.type === Shape.Circle) {\r\n                    if (this.activeShape.radius < this.MIN_RADIUS) {\r\n                        this.dataset.pop();\r\n                        this.emit('warn', `Radius cannot be less than ${this.MIN_WIDTH}`);\r\n                    } else {\r\n                        this.activeShape.creating = false;\r\n                        this.emit('add', this.activeShape);\r\n                    }\r\n                }\r\n                this.update();\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleDblclick(e: MouseEvent | TouchEvent) {\r\n        e.stopPropagation();\r\n        this.evt = e;\r\n        if (this.lock) return;\r\n        if ([Shape.Polygon, Shape.Line].includes(this.activeShape.type)) {\r\n            const canPolygon = this.activeShape.type === Shape.Polygon && this.activeShape.coor.length > 2\r\n            const canLine = this.activeShape.type === Shape.Line && this.activeShape.coor.length > 1\r\n            if (canPolygon || canLine) {\r\n                this.emit('add', this.activeShape);\r\n                this.activeShape.creating = false;\r\n                this.update();\r\n            }\r\n        }\r\n    }\r\n    private handleKeydown(e: KeyboardEvent) {\r\n        if (e.key === 'Control') {\r\n            this.ctrlKey = true;\r\n        }\r\n    }\r\n\r\n    private handleKeyup(e: KeyboardEvent) {\r\n        if (e.key === 'Control') {\r\n            this.ctrlKey = false;\r\n        }\r\n        this.evt = e;\r\n        if (this.lock || this.readonly) return;\r\n        if (this.activeShape.type) {\r\n            if ([Shape.Polygon, Shape.Line].includes(this.activeShape.type) && e.key === 'Escape') {\r\n                if (this.activeShape.coor.length > 1 && this.activeShape.creating) {\r\n                    this.activeShape.coor.pop();\r\n                } else {\r\n                    this.deleteByIndex(this.activeShape.index);\r\n                }\r\n                this.update();\r\n            } else if (e.key === 'Delete') {\r\n                this.deleteByIndex(this.activeShape.index);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** 初始化配置 */\r\n    initSetting() {\r\n        const dpr = window.devicePixelRatio || 1;\r\n        this.canvas.style.userSelect = 'none';\r\n        this.ctx = this.ctx || this.canvas.getContext('2d', { alpha: this.alpha });\r\n        this.WIDTH = Math.round(this.canvas.clientWidth);\r\n        this.HEIGHT = Math.round(this.canvas.clientHeight);\r\n        this.canvas.width = this.WIDTH * dpr;\r\n        this.canvas.height = this.HEIGHT * dpr;\r\n        this.canvas.style.width = this.WIDTH + 'px';\r\n        this.canvas.style.height = this.HEIGHT + 'px';\r\n        this.offScreen.width = this.WIDTH;\r\n        this.offScreen.height = this.HEIGHT;\r\n        this.offScreenCtx = this.offScreenCtx || this.offScreen.getContext('2d', { willReadFrequently: true });\r\n        this.ctx.scale(dpr, dpr);\r\n    }\r\n\r\n    /** 初始化事件 */\r\n    initEvents() {\r\n        this.image.addEventListener('load', this.handleLoad);\r\n        this.canvas.addEventListener('touchstart', this.handleMouseDown);\r\n        this.canvas.addEventListener('touchmove', this.handleMouseMove);\r\n        this.canvas.addEventListener('touchend', this.handleMouseUp);\r\n        this.canvas.addEventListener('contextmenu', this.handleContextmenu);\r\n        this.canvas.addEventListener('mousewheel', this.handleMousewheel);\r\n        this.canvas.addEventListener('mousedown', this.handleMouseDown);\r\n        this.canvas.addEventListener('mousemove', this.handleMouseMove);\r\n        this.canvas.addEventListener('mouseup', this.handleMouseUp);\r\n        this.canvas.addEventListener('dblclick', this.handleDblclick);\r\n        document.body.addEventListener('keydown', this.handleKeydown, true);\r\n        document.body.addEventListener('keyup', this.handleKeyup, true);\r\n    }\r\n\r\n    /**\r\n     * 添加/切换图片\r\n     * @param url 图片链接\r\n     */\r\n    setImage(url: string) {\r\n        this.image.src = url;\r\n    }\r\n\r\n    /**\r\n     * 设置数据\r\n     * @param data Array\r\n     */\r\n    setData(data: AllShape[]) {\r\n        setTimeout(() => {\r\n            const initdata: AllShape[] = [];\r\n            data.forEach((item, index) => {\r\n                if (Object.prototype.toString.call(item).includes('Object')) {\r\n                    let shape: AllShape;\r\n                    switch (item.type) {\r\n                        case Shape.Rect:\r\n                            shape = new Rect(item, index);\r\n                            break;\r\n                        case Shape.Polygon:\r\n                            shape = new Polygon(item, index);\r\n                            break;\r\n                        case Shape.Dot:\r\n                            shape = new Dot(item, index);\r\n                            break;\r\n                        case Shape.Line:\r\n                            shape = new Line(item, index);\r\n                            break;\r\n                        case Shape.Circle:\r\n                            shape = new Circle(item, index);\r\n                            break;\r\n                        default:\r\n                            console.warn('Invalid shape', item);\r\n                            break;\r\n                    }\r\n                    [Shape.Rect, Shape.Polygon, Shape.Dot, Shape.Line, Shape.Circle].includes(item.type) && initdata.push(shape);\r\n                } else {\r\n                    console.warn('Shape must be an enumerable Object.', item);\r\n                }\r\n            });\r\n            this.dataset = initdata;\r\n            this.update();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 判断是否在标注实例上\r\n     * @param mousePoint 点击位置\r\n     * @returns\r\n     */\r\n    hitOnShape(mousePoint: Point): [number, AllShape] {\r\n        let hitShapeIndex = -1;\r\n        let hitShape: AllShape;\r\n        for (let i = this.dataset.length - 1; i > -1; i--) {\r\n            const shape = this.dataset[i];\r\n            if (\r\n                (shape.type === Shape.Dot && this.isPointInCircle(mousePoint, shape.coor as Point, this.ctrlRadius)) ||\r\n                (shape.type === Shape.Circle && this.isPointInCircle(mousePoint, shape.coor as Point, (shape as Circle).radius * this.scale)) ||\r\n                (shape.type === Shape.Rect && this.isPointInRect(mousePoint, (shape as Rect).coor)) ||\r\n                (shape.type === Shape.Polygon && this.isPointInPolygon(mousePoint, (shape as Polygon).coor)) ||\r\n                (shape.type === Shape.Line && this.isPointInLine(mousePoint, (shape as Line).coor))\r\n            ) {\r\n                if (this.focusMode && !shape.active) continue;\r\n                hitShapeIndex = i;\r\n                hitShape = shape;\r\n                break;\r\n            }\r\n        }\r\n        return [hitShapeIndex, hitShape];\r\n    }\r\n\r\n    /**\r\n     * 判断鼠标是否在背景图内部\r\n     * @param e MouseEvent\r\n     * @returns 布尔值\r\n     */\r\n    isInBackground(e: MouseEvent | TouchEvent): boolean {\r\n        const { mouseX, mouseY } = this.mergeEvent(e);\r\n        return mouseX >= this.originX &&\r\n            mouseY >= this.originY &&\r\n            mouseX <= this.originX + this.IMAGE_ORIGIN_WIDTH * this.scale &&\r\n            mouseY <= this.originY + this.IMAGE_ORIGIN_HEIGHT * this.scale;\r\n    }\r\n\r\n    /**\r\n     * 判断是否在矩形内\r\n     * @param point 坐标\r\n     * @param coor 区域坐标\r\n     * @returns 布尔值\r\n     */\r\n    isPointInRect(point: Point, coor: Point[]): boolean {\r\n        const [x, y] = point;\r\n        const [[x0, y0], [x1, y1]] = coor.map((a) => a.map((b) => b * this.scale));\r\n        return x0 + this.originX <= x &&\r\n            x <= x1 + this.originX &&\r\n            y0 + this.originY <= y &&\r\n            y <= y1 + this.originY;\r\n    }\r\n\r\n    /**\r\n     * 判断是否在多边形内\r\n     * @param point 坐标\r\n     * @param coor 区域坐标\r\n     * @returns 布尔值\r\n     */\r\n    isPointInPolygon(point: Point, coor: Point[]): boolean {\r\n        this.offScreenCtx.save();\r\n        this.offScreenCtx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\r\n        this.offScreenCtx.translate(this.originX, this.originY);\r\n        this.offScreenCtx.beginPath();\r\n        coor.forEach((pt, i) => {\r\n            const [x, y] = pt.map((a) => Math.round(a * this.scale));\r\n            if (i === 0) {\r\n                this.offScreenCtx.moveTo(x, y);\r\n            } else {\r\n                this.offScreenCtx.lineTo(x, y);\r\n            }\r\n        });\r\n        this.offScreenCtx.closePath();\r\n        this.offScreenCtx.fill();\r\n        const areaData = this.offScreenCtx.getImageData(0, 0, this.WIDTH, this.HEIGHT);\r\n        const index = (point[1] - 1) * this.WIDTH * 4 + point[0] * 4;\r\n        this.offScreenCtx.restore();\r\n        return areaData.data[index + 3] !== 0;\r\n    }\r\n\r\n    /**\r\n     * 判断是否在圆内\r\n     * @param point 坐标\r\n     * @param center 圆心\r\n     * @param r 半径\r\n     * @param needScale 是否为圆形点击检测\r\n     * @returns 布尔值\r\n     */\r\n    isPointInCircle(point: Point, center: Point, r: number): boolean {\r\n        const [x, y] = point;\r\n        const [x0, y0] = center.map((a) => a * this.scale);\r\n        const distance = Math.sqrt((x0 + this.originX - x) ** 2 + (y0 + this.originY - y) ** 2);\r\n        return distance <= r;\r\n    }\r\n\r\n    /**\r\n     * 判断是否在折线内\r\n     * @param point 坐标\r\n     * @param coor 区域坐标\r\n     * @returns 布尔值\r\n     */\r\n    isPointInLine(point: Point, coor: Point[]): boolean {\r\n        this.offScreenCtx.save();\r\n        this.offScreenCtx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\r\n        this.offScreenCtx.translate(this.originX, this.originY);\r\n        this.offScreenCtx.lineWidth = 5;\r\n        this.offScreenCtx.beginPath();\r\n        coor.forEach((pt, i) => {\r\n            const [x, y] = pt.map((a) => Math.round(a * this.scale));\r\n            if (i === 0) {\r\n                this.offScreenCtx.moveTo(x, y);\r\n            } else {\r\n                this.offScreenCtx.lineTo(x, y);\r\n            }\r\n        });\r\n        this.offScreenCtx.stroke();\r\n        const areaData = this.offScreenCtx.getImageData(0, 0, this.WIDTH, this.HEIGHT);\r\n        const index = (point[1] - 1) * this.WIDTH * 4 + point[0] * 4;\r\n        this.offScreenCtx.restore();\r\n        return areaData.data[index + 3] !== 0;\r\n    }\r\n\r\n    /**\r\n       * 判断是图形是否属于嵌套关系 (目前只支持矩形和多边形)\r\n       * @param shape1 标注实例\r\n       * @param shape2 标注实例\r\n       * @returns 布尔值\r\n       */\r\n    isNested(shape1: Rect | Polygon, shape2: Rect | Polygon): boolean {\r\n        return isNested(shape1, shape2);\r\n    }\r\n\r\n    /**\r\n     * 绘制矩形\r\n     * @param shape 标注实例\r\n     * @returns\r\n     */\r\n    drawRect(shape: Rect) {\r\n        if (shape.coor.length !== 2) return;\r\n        const { strokeStyle, fillStyle, active, creating, coor, lineWidth } = shape;\r\n        const [[x0, y0], [x1, y1]] = coor.map((a: Point) => a.map((b) => Math.round(b * this.scale)));\r\n        this.ctx.save();\r\n        this.ctx.lineWidth = lineWidth || this.lineWidth;\r\n        this.ctx.fillStyle = fillStyle || this.fillStyle;\r\n        this.ctx.strokeStyle = (active || creating) ? this.activeStrokeStyle : (strokeStyle || this.strokeStyle);\r\n        const w = x1 - x0;\r\n        const h = y1 - y0;\r\n        if (!creating) this.ctx.fillRect(x0, y0, w, h);\r\n        this.ctx.strokeRect(x0, y0, w, h);\r\n        this.ctx.restore();\r\n        this.drawLabel(coor[0], shape);\r\n    }\r\n\r\n    /**\r\n     * 绘制多边形\r\n     * @param shape 标注实例\r\n     */\r\n    drawPolygon(shape: Polygon) {\r\n        const { strokeStyle, fillStyle, active, creating, coor, lineWidth } = shape;\r\n        this.ctx.save();\r\n        this.ctx.lineJoin = 'round';\r\n        this.ctx.lineWidth = lineWidth || this.lineWidth;\r\n        this.ctx.fillStyle = fillStyle || this.fillStyle;\r\n        this.ctx.strokeStyle = (active || creating) ? this.activeStrokeStyle : (strokeStyle || this.strokeStyle);\r\n        this.ctx.beginPath();\r\n        coor.forEach((el: Point, i) => {\r\n            const [x, y] = el.map((a) => Math.round(a * this.scale));\r\n            if (i === 0) {\r\n                this.ctx.moveTo(x, y);\r\n            } else {\r\n                this.ctx.lineTo(x, y);\r\n            }\r\n        });\r\n        if (creating) {\r\n            const [x, y] = this.mouse || [];\r\n            this.ctx.lineTo(x - this.originX, y - this.originY);\r\n        } else if (coor.length > 2) {\r\n            this.ctx.closePath();\r\n        }\r\n        this.ctx.fill();\r\n        this.ctx.stroke();\r\n        this.ctx.restore();\r\n        this.drawLabel(coor[0], shape);\r\n    }\r\n\r\n    /**\r\n     * 绘制点\r\n     * @param shape 标注实例\r\n     */\r\n    drawDot(shape: Dot) {\r\n        const { strokeStyle, fillStyle, active, coor, lineWidth } = shape;\r\n        const [x, y] = coor.map((a) => a * this.scale);\r\n        this.ctx.save();\r\n        this.ctx.lineWidth = lineWidth || this.lineWidth;\r\n        this.ctx.fillStyle = fillStyle || this.ctrlFillStyle;\r\n        this.ctx.strokeStyle = active ? this.activeStrokeStyle : (strokeStyle || this.strokeStyle);\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\r\n        this.ctx.fill();\r\n        this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\r\n        this.ctx.stroke();\r\n        this.ctx.restore();\r\n        this.drawLabel(coor as Point, shape);\r\n    }\r\n\r\n    /**\r\n     * 绘制圆\r\n     * @param shape 标注实例\r\n     */\r\n    drawCirle(shape: Circle) {\r\n        const { strokeStyle, fillStyle, active, coor, label, creating, radius, ctrlsData, lineWidth } = shape;\r\n        const [x, y] = coor.map((a) => a * this.scale);\r\n        this.ctx.save();\r\n        this.ctx.lineWidth = lineWidth || this.lineWidth;\r\n        this.ctx.fillStyle = fillStyle || this.fillStyle;\r\n        this.ctx.strokeStyle = (active || creating) ? this.activeStrokeStyle : (strokeStyle || this.strokeStyle);\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(x, y, radius * this.scale, 0, 2 * Math.PI, true);\r\n        this.ctx.fill();\r\n        this.ctx.arc(x, y, radius * this.scale, 0, 2 * Math.PI, true);\r\n        this.ctx.stroke();\r\n        this.ctx.restore();\r\n        this.drawLabel(ctrlsData[0] as Point, shape);\r\n    }\r\n\r\n    /**\r\n     * 绘制折线\r\n     * @param shape 标注实例\r\n     */\r\n    drawLine(shape: Line) {\r\n        const { strokeStyle, active, creating, coor, lineWidth } = shape;\r\n        this.ctx.save();\r\n        this.ctx.lineJoin = 'round';\r\n        this.ctx.lineWidth = lineWidth || this.lineWidth;\r\n        this.ctx.strokeStyle = (active || creating) ? this.activeStrokeStyle : (strokeStyle || this.strokeStyle);\r\n        this.ctx.beginPath();\r\n        coor.forEach((el: Point, i) => {\r\n            const [x, y] = el.map((a) => Math.round(a * this.scale));\r\n            if (i === 0) {\r\n                this.ctx.moveTo(x, y);\r\n            } else {\r\n                this.ctx.lineTo(x, y);\r\n            }\r\n        });\r\n        if (creating) {\r\n            const [x, y] = this.mouse || [];\r\n            this.ctx.lineTo(x - this.originX, y - this.originY);\r\n        }\r\n        this.ctx.stroke();\r\n        this.ctx.restore();\r\n        this.drawLabel(coor[0], shape);\r\n    }\r\n\r\n    /**\r\n     * 绘制控制点\r\n     * @param point 坐标\r\n     */\r\n    drawCtrl(point: Point) {\r\n        const [x, y] = point.map((a) => a * this.scale);\r\n        this.ctx.save();\r\n        this.ctx.beginPath();\r\n        this.ctx.fillStyle = this.ctrlFillStyle;\r\n        this.ctx.strokeStyle = this.ctrlStrokeStyle;\r\n        this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\r\n        this.ctx.fill();\r\n        this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\r\n        this.ctx.stroke();\r\n        this.ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * 绘制控制点列表\r\n     * @param shape 标注实例\r\n     */\r\n    drawCtrlList(shape: Rect | Polygon | Line) {\r\n        shape.ctrlsData.forEach((point, i) => {\r\n            if (shape.type === Shape.Circle) {\r\n                if (i === 1) this.drawCtrl(point);\r\n            } else {\r\n                this.drawCtrl(point);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 绘制label\r\n     * @param point 位置\r\n     * @param label 文本\r\n     */\r\n    drawLabel(point: Point, shape: AllShape) {\r\n        const { label = '', labelFillStyle = '', labelFont = '', textFillStyle = '', hideLabel, labelUp, lineWidth } = shape;\r\n        const isHideLabel = typeof hideLabel === 'boolean' ? hideLabel : this.hideLabel;\r\n        const isLabelUp = typeof labelUp === 'boolean' ? labelUp : this.labelUp;\r\n        const currLineWidth = lineWidth || this.lineWidth;\r\n\r\n        if (label.length && !isHideLabel) {\r\n            this.ctx.font = labelFont || this.labelFont;\r\n            const textPaddingLeft = 4;\r\n            const textPaddingTop = 4;\r\n            const newText = label.length < this.labelMaxLen + 1 ? label : `${label.slice(0, this.labelMaxLen)}...`;\r\n            const text = this.ctx.measureText(newText);\r\n            const font = parseInt(this.ctx.font) - 4;\r\n            const labelWidth = text.width + textPaddingLeft * 2;\r\n            const labelHeight = font + textPaddingTop * 2;\r\n            const [x, y] = point.map((a) => a * this.scale);\r\n            const toleft = (this.IMAGE_ORIGIN_WIDTH - point[0]) < labelWidth / this.scale;\r\n            const toTop = (this.IMAGE_ORIGIN_HEIGHT - point[1]) < labelHeight / this.scale;\r\n            const toTop2 = point[1] > labelHeight / this.scale;\r\n            const isup = isLabelUp ? toTop2 : toTop;\r\n            this.ctx.save();\r\n            this.ctx.fillStyle = labelFillStyle || this.labelFillStyle;\r\n            this.ctx.fillRect(toleft ? (x - text.width - textPaddingLeft - currLineWidth / 2) : (x + currLineWidth / 2), isup ? (y - labelHeight - currLineWidth / 2) : (y + currLineWidth / 2), labelWidth, labelHeight);\r\n            this.ctx.fillStyle = textFillStyle || this.textFillStyle;\r\n            this.ctx.fillText(newText, toleft ? (x - text.width) : (x + textPaddingLeft + currLineWidth / 2), isup ? (y - labelHeight + font + textPaddingTop) : (y + font + textPaddingTop + currLineWidth / 2), 180);\r\n            this.ctx.restore();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新画布\r\n     */\r\n    update() {\r\n        window.cancelAnimationFrame(this.timer);\r\n        this.timer = window.requestAnimationFrame(() => {\r\n            this.ctx.save();\r\n            this.ctx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\r\n            this.ctx.translate(this.originX, this.originY);\r\n            if (this.IMAGE_WIDTH && this.IMAGE_HEIGHT) {\r\n                this.ctx.drawImage(this.image, 0, 0, this.IMAGE_WIDTH, this.IMAGE_HEIGHT);\r\n            }\r\n            const renderList = this.focusMode ? (this.activeShape.type ? [this.activeShape] : []) : this.dataset;\r\n            for (let i = 0; i < renderList.length; i++) {\r\n                const shape = renderList[i];\r\n                if (shape.hide) continue;\r\n                switch (shape.type) {\r\n                    case Shape.Rect:\r\n                        this.drawRect(shape as Rect);\r\n                        break;\r\n                    case Shape.Polygon:\r\n                        this.drawPolygon(shape as Polygon);\r\n                        break;\r\n                    case Shape.Dot:\r\n                        this.drawDot(shape as Dot);\r\n                        break;\r\n                    case Shape.Line:\r\n                        this.drawLine(shape as Line);\r\n                        break;\r\n                    case Shape.Circle:\r\n                        this.drawCirle(shape as Circle);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            if ([Shape.Rect, Shape.Polygon, Shape.Line, Shape.Circle].includes(this.activeShape.type) && !this.activeShape.hide) {\r\n                this.drawCtrlList(this.activeShape);\r\n            }\r\n            this.ctx.restore();\r\n            this.emit('updated', this.dataset);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 删除指定矩形\r\n     * @param index number\r\n     */\r\n    deleteByIndex(index: number) {\r\n        const num = this.dataset.findIndex((x) => x.index === index);\r\n        if (num > -1) {\r\n            this.emit('delete', this.dataset[num]);\r\n            this.dataset.splice(num, 1);\r\n            this.dataset.forEach((item, i) => { item.index = i; });\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 计算缩放步长\r\n     */\r\n    calcStep(flag = '') {\r\n        if (this.IMAGE_WIDTH < this.WIDTH && this.IMAGE_HEIGHT < this.HEIGHT) {\r\n            if (flag === '' || flag === 'b') {\r\n                this.setScale(true, false, true);\r\n                this.calcStep('b');\r\n            }\r\n        }\r\n        if (this.IMAGE_WIDTH > this.WIDTH || this.IMAGE_HEIGHT > this.HEIGHT) {\r\n            if (flag === '' || flag === 's') {\r\n                this.setScale(false, false, true);\r\n                this.calcStep('s');\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 缩放\r\n     * @param type true放大5%，false缩小5%\r\n     * @param center 缩放中心 center|mouse\r\n     * @param pure 不绘制\r\n     */\r\n    setScale(type: boolean, byMouse = false, pure = false) {\r\n        if (this.lock) return;\r\n        if ((!type && this.imageMin < 20) || (type && this.IMAGE_WIDTH > this.imageOriginMax * 100)) return;\r\n        if (type) { this.scaleStep++; } else { this.scaleStep--; }\r\n        let realToLeft = 0;\r\n        let realToRight = 0;\r\n        const [x, y] = this.mouse || [];\r\n        if (byMouse) {\r\n            realToLeft = (x - this.originX) / this.scale;\r\n            realToRight = (y - this.originY) / this.scale;\r\n        }\r\n        const abs = Math.abs(this.scaleStep);\r\n        const width = this.IMAGE_WIDTH;\r\n        this.IMAGE_WIDTH = Math.round(this.IMAGE_ORIGIN_WIDTH * (this.scaleStep >= 0 ? 1.05 : 0.95) ** abs);\r\n        this.IMAGE_HEIGHT = Math.round(this.IMAGE_ORIGIN_HEIGHT * (this.scaleStep >= 0 ? 1.05 : 0.95) ** abs);\r\n        if (byMouse) {\r\n            this.originX = x - realToLeft * this.scale;\r\n            this.originY = y - realToRight * this.scale;\r\n        } else {\r\n            const scale = this.IMAGE_WIDTH / width;\r\n            this.originX = this.WIDTH / 2 - (this.WIDTH / 2 - this.originX) * scale;\r\n            this.originY = this.HEIGHT / 2 - (this.HEIGHT / 2 - this.originY) * scale;\r\n        }\r\n        if (!pure) {\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 适配背景图\r\n     */\r\n    fitZoom() {\r\n        this.calcStep();\r\n        if (this.IMAGE_HEIGHT / this.IMAGE_WIDTH >= this.HEIGHT / this.WIDTH) {\r\n            this.IMAGE_WIDTH = this.IMAGE_ORIGIN_WIDTH / (this.IMAGE_ORIGIN_HEIGHT / this.HEIGHT);\r\n            this.IMAGE_HEIGHT = this.HEIGHT;\r\n        } else {\r\n            this.IMAGE_WIDTH = this.WIDTH;\r\n            this.IMAGE_HEIGHT = this.IMAGE_ORIGIN_HEIGHT / (this.IMAGE_ORIGIN_WIDTH / this.WIDTH);\r\n        }\r\n        this.originX = (this.WIDTH - this.IMAGE_WIDTH) / 2;\r\n        this.originY = (this.HEIGHT - this.IMAGE_HEIGHT) / 2;\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * 设置专注模式\r\n     * @param type {boolean}\r\n     */\r\n    setFocusMode(type: boolean) {\r\n        this.focusMode = type;\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    destroy() {\r\n        this.image.removeEventListener('load', this.handleLoad);\r\n        this.canvas.removeEventListener('contextmenu', this.handleContextmenu);\r\n        this.canvas.removeEventListener('mousewheel', this.handleMousewheel);\r\n        this.canvas.removeEventListener('mousedown', this.handleMouseDown);\r\n        this.canvas.removeEventListener('touchend', this.handleMouseDown);\r\n        this.canvas.removeEventListener('mousemove', this.handleMouseMove);\r\n        this.canvas.removeEventListener('touchmove', this.handleMouseMove);\r\n        this.canvas.removeEventListener('mouseup', this.handleMouseUp);\r\n        this.canvas.removeEventListener('touchend', this.handleMouseUp);\r\n        this.canvas.removeEventListener('dblclick', this.handleDblclick);\r\n        document.body.removeEventListener('keydown', this.handleKeydown, true);\r\n        document.body.removeEventListener('keyup', this.handleKeyup, true);\r\n        this.canvas.width = this.WIDTH;\r\n        this.canvas.height = this.HEIGHT;\r\n        this.canvas.style.width = null;\r\n        this.canvas.style.height = null;\r\n        this.canvas.style.userSelect = null;\r\n    }\r\n\r\n    /**\r\n     * 重新设置画布大小\r\n     */\r\n    resize() {\r\n        this.canvas.width = null;\r\n        this.canvas.height = null;\r\n        this.canvas.style.width = null;\r\n        this.canvas.style.height = null;\r\n        this.initSetting();\r\n        this.update();\r\n    }\r\n}\r\n","import Shape from './Shape';\r\n\r\nexport default class Rect extends Shape {\r\n  public type = 1\r\n  constructor(item: any, index: number) {\r\n    super(item, index)\r\n  }\r\n  get ctrlsData() {\r\n    const [[x0, y0], [x1, y1]] = this.coor;\r\n    return [\r\n      [x0, y0],\r\n      [x0 + (x1 - x0) / 2, y0],\r\n      [x1, y0],\r\n      [x1, y0 + (y1 - y0) / 2],\r\n      [x1, y1],\r\n      [x0 + (x1 - x0) / 2, y1],\r\n      [x0, y1],\r\n      [x0, y0 + (y1 - y0) / 2],\r\n    ];\r\n  }\r\n}\r\n","import Shape from './Shape';\r\n\r\nexport default class Polygon extends Shape {\r\n  public type = 2\r\n  constructor(item: any, index: number) {\r\n    super(item, index)\r\n  }\r\n  get ctrlsData() {\r\n    return this.coor.length > 2 ? this.coor : [];\r\n  }\r\n}\r\n","import Shape from './Shape';\r\n\r\nexport default class Dot extends Shape {\r\n    public type = 3\r\n    constructor(item: any, index: number) {\r\n        super(item, index)\r\n    }\r\n}\r\n","export default class EventBus {\r\n    private _eventTree: Record<string, any> = {}\r\n    /**\r\n   * 注册事件\r\n   * @param eventName 事件名称\r\n   * @param cb 回调方法\r\n   */\r\n    on(eventName: string, cb: Function) {\r\n        const fns = this._eventTree[eventName];\r\n        if (Array.isArray(fns)) {\r\n            fns.push(cb);\r\n        } else {\r\n            this._eventTree[eventName] = [cb];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 触发事件\r\n     * @param eventName 事件名称\r\n     * @param payload 传递参数\r\n     */\r\n    emit(eventName: string, ...payload: any) {\r\n        const fns = this._eventTree[eventName];\r\n        if (Array.isArray(fns)) {\r\n            fns.forEach((fn) => fn(...payload));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 注销事件\r\n     * @param eventName 事件名称\r\n     * @param cb 传递参数\r\n     */\r\n    off(eventName: string, cb: Function) {\r\n        const fns = this._eventTree[eventName];\r\n        const index = fns.find((fn: Function) => fn === cb);\r\n        if (Array.isArray(fns) && index) {\r\n            fns.splice(index, 1);\r\n        }\r\n    }\r\n}\r\n","import Shape from './Shape';\r\n\r\nexport default class Line extends Shape {\r\n  public type = 4\r\n  constructor(item: any, index: number) {\r\n    super(item, index)\r\n  }\r\n  get ctrlsData() {\r\n    return this.coor.length > 1 ? this.coor : [];\r\n  }\r\n}\r\n","import Shape from './Shape';\r\n\r\nexport default class Circle extends Shape {\r\n    public type = 5\r\n    public radius = 0\r\n    constructor(item: any, index: number) {\r\n        super(item, index)\r\n        this.radius = item.radius || this.radius\r\n    }\r\n    get ctrlsData() {\r\n        const [x, y] = this.coor\r\n        return [\r\n            [x, y - this.radius],\r\n            [x + this.radius, y],\r\n            [x, y + this.radius],\r\n            [x - this.radius, y]\r\n        ]\r\n    }\r\n}\r\n"],"names":["isPointInPolygon","x","y","vertices","inside","n","length","i","j","xi","yi","xj","yj","Shape","item","index","this","label","coor","active","creating","dragging","uuid","s","hexDigits","m","Math","floor","random","slice","join","createUuid","Object","assign","Rect","_super","_this","call","type","__extends","defineProperty","prototype","get","_a","__read","_b","x0","y0","_c","x1","y1","Polygon","Dot","EventBus","_eventTree","on","eventName","cb","fns","Array","isArray","push","emit","payload","_i","arguments","forEach","fn","apply","__spreadArray","off","find","splice","Line","Circle","radius","CanvasSelect","el","src","version","pkg","lock","readonly","MIN_WIDTH","MIN_HEIGHT","MIN_RADIUS","strokeStyle","fillStyle","lineWidth","activeStrokeStyle","activeFillStyle","ctrlStrokeStyle","ctrlFillStyle","ctrlRadius","hideLabel","labelFillStyle","labelFont","textFillStyle","labelMaxLen","WIDTH","HEIGHT","dataset","remmberOrigin","createType","None","ctrlIndex","image","Image","IMAGE_WIDTH","IMAGE_ORIGIN_HEIGHT","IMAGE_HEIGHT","originX","originY","scaleStep","scrollZoom","dblTouch","dblTouchStore","alpha","focusMode","scaleTouchStore","isTouch2","isMobile","navigator","userAgent","includes","labelUp","ctrlKey","handleLoad","bind","handleContextmenu","handleMousewheel","handleMouseDown","handleMouseMove","handleMouseUp","handleDblclick","handleKeyup","handleKeydown","container","document","querySelector","HTMLCanvasElement","canvas","offScreen","createElement","initSetting","initEvents","setImage","console","warn","IMAGE_ORIGIN_WIDTH","min","max","mergeEvent","e","mouseX","mouseY","mouseCX","mouseCY","touches","clientX","clientY","target","getBoundingClientRect","left","top_1","top","round","_d","clientX1","_e","clientY1","abs","offsetX","offsetY","__assign","width","height","fitZoom","preventDefault","evt","stopPropagation","mouse","setScale","deltaY","scale","buttons","ctrls","activeShape","ctrlsData","findIndex","isPointInCircle","remmber","isInBackground","nx","ny","hitOnShape","hitShapeIndex_1","hitShape","pt","sort","a","b","newShape","curPoint","sp","update","_f","_g","_h","a0","b0","_j","a1","b1","concat","newPoint","newRadius","noLimit","w","h","_k","t1","tar","_l","r","sqrt","pow","which","touch0","touch1","cur","Date","now","pop","canPolygon","canLine","key","deleteByIndex","dpr","window","devicePixelRatio","style","userSelect","ctx","getContext","clientWidth","clientHeight","offScreenCtx","willReadFrequently","addEventListener","body","url","setData","data","setTimeout","initdata","toString","shape","mousePoint","hitShapeIndex","isPointInRect","isPointInLine","point","map","save","clearRect","translate","beginPath","moveTo","lineTo","closePath","fill","areaData","getImageData","restore","center","stroke","isNested","shape1","shape2","x2","y2","x3","y3","x4","y4","vertices1","vertices2","_m","drawRect","fillRect","strokeRect","drawLabel","drawPolygon","lineJoin","drawDot","arc","PI","drawCirle","drawLine","drawCtrl","drawCtrlList","isHideLabel","isLabelUp","currLineWidth","font","newText","text","measureText","parseInt","labelWidth","textPaddingLeft","labelHeight","textPaddingTop","toleft","toTop","toTop2","isup","fillText","cancelAnimationFrame","timer","requestAnimationFrame","drawImage","renderList","hide","num","calcStep","flag","byMouse","pure","imageMin","imageOriginMax","realToLeft","realToRight","setFocusMode","destroy","removeEventListener","resize"],"mappings":"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"}