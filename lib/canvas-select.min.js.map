{"version":3,"file":"canvas-select.min.js","sources":["../src/tools.ts","../src/shape/Shape.ts","../src/shape/Rect.ts","../src/shape/Polygon.ts","../src/shape/Dot.ts","../src/EventBus.ts","../src/shape/Line.ts","../src/shape/Circle.ts","../src/index.ts"],"sourcesContent":["export function createUuid(): string {\r\n  const s: any[] = [];\r\n  const hexDigits = \"0123456789abcdef\";\r\n  for (let i = 0; i < 36; i++) {\r\n    const m = Math.floor(Math.random() * 0x10);\r\n    s[i] = hexDigits.slice(m, m + 1);\r\n  }\r\n  s[14] = \"4\";\r\n  const n = (s[19] & 0x3) | 0x8;\r\n  s[19] = hexDigits.slice(n, n + 1);\r\n  s[8] = s[13] = s[18] = s[23] = \"-\";\r\n  const uuid = s.join(\"\");\r\n  return uuid;\r\n}\r\n\r\n/**\r\n * 判断图形是否符合嵌套关系, 业务需求：只需要判断shape2所有的点是否都在shape1内部即可\r\n * @param shape1 参数1\r\n * @param shape2 参数2\r\n * @reutrn Boolean 符合条件返回true 否则返回false\r\n */\r\n\r\nexport function isNested(shape1: any, shape2: any): boolean {\r\n  if (shape1.type === 1 && shape2.type === 1) {\r\n    // 矩形和矩形的判断逻辑\r\n    const [[x1, y1], [x2, y2]] = shape1.coor;\r\n    const [[x3, y3], [x4, y4]] = shape2.coor;\r\n\r\n    // if (x1 >= x3 && y1 >= y3 && x2 <= x4 && y2 <= y4) {\r\n    //   return true; // shape1 嵌套在 shape2 内部\r\n    // } else\r\n    if (x1 <= x3 && y1 <= y3 && x2 >= x4 && y2 >= y4) {\r\n      return true; // shape2 嵌套在 shape1 内部\r\n    } else {\r\n      return false; // 两个矩形没有嵌套关系\r\n    }\r\n  } else if (shape1.type === 1 && shape2.type === 2) {\r\n    // 矩形和多边形的判断逻辑，确保多边形所有的坐标点都在矩形里面\r\n    const [[x1, y1], [x2, y2]] = shape1.coor;\r\n    const vertices = shape2.coor;\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const [x, y] = vertices[i];\r\n      if (x < x1 || x > x2 || y < y1 || y > y2) {\r\n        return false; // 多边形的顶点在矩形外部，不嵌套\r\n      }\r\n    }\r\n\r\n    return true; // 所有顶点都在矩形内部，嵌套关系成立\r\n  } else if (shape1.type === 2 && shape2.type === 1) {\r\n    // 多边形和矩形的判断逻辑，确保矩形的所有坐标点都在多边形里面\r\n    const vertices = shape2.coor; // 矩形的顶点坐标\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const [x, y] = vertices[i];\r\n      if (!isPointInPolygon(x, y, shape1.coor)) {\r\n        return false; // 有一个坐标点不在多边形范围内，返回false\r\n      }\r\n    }\r\n\r\n    return true; // 所有坐标点都在多边形内部，返回true\r\n  } else if (shape1.type === 2 && shape2.type === 2) {\r\n    // 多边形和多边形的判断逻辑\r\n    const vertices1 = shape1.coor;\r\n    const vertices2 = shape2.coor;\r\n\r\n    for (let i = 0; i < vertices2.length; i++) {\r\n      const [x, y] = vertices2[i];\r\n      if (!isPointInPolygon(x, y, vertices1)) {\r\n        return false; // 多边形2的顶点不都在多边形1内部，不嵌套\r\n      }\r\n    }\r\n\r\n    return true; // 有坐标点都在多边形内部，返回true\r\n  }\r\n}\r\n\r\nfunction isPointInPolygon(x: number, y: number, vertices: any) {\r\n  let inside = false;\r\n  const n = vertices.length;\r\n\r\n  for (let i = 0, j = n - 1; i < n; j = i++) {\r\n    const xi = vertices[i][0];\r\n    const yi = vertices[i][1];\r\n    const xj = vertices[j][0];\r\n    const yj = vertices[j][1];\r\n\r\n    if (yi > y !== yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi) {\r\n      inside = !inside;\r\n    }\r\n  }\r\n\r\n  return inside;\r\n}\r\n","import { createUuid } from \"../tools\"\r\n\r\ninterface ShapeProp {\r\n    type: number\r\n    [key: string]: any\r\n}\r\nexport default class Shape {\r\n    /** 标签 */\r\n    public label: string = ''\r\n    /** 是否隐藏标签 */\r\n    public hideLabel: boolean\r\n    /** 坐标 */\r\n    public coor: any[] = []\r\n    /** 边线颜色 */\r\n    public strokeStyle: string\r\n    /** 填充颜色 */\r\n    public fillStyle: string\r\n    /** 边线宽度 */\r\n    public lineWidth: number\r\n    /** 标签填充颜色 */\r\n    public labelFillStyle: string\r\n    /** 标签文字颜色 */\r\n    public textFillStyle: string\r\n    /** 标签文字字体 */\r\n    public labelFont: string\r\n    /** 1 矩形，2 多边形，3 点，4 折线，5 圆 */\r\n    public type: number // 形状\r\n    /** 当前是否处于活动状态 */\r\n    public active: boolean = false\r\n    /** 当前是否处于创建状态 */\r\n    public creating: boolean = false\r\n    /** 当前是否处于拖拽状态 */\r\n    public dragging: boolean = false\r\n    /** 索引 */\r\n    public index: number\r\n    /** 唯一标识 */\r\n    public uuid: string = createUuid()\r\n    /** 向上展示label */\r\n    public labelUp: boolean\r\n    constructor(item: ShapeProp, index: number) {\r\n        this.index = index\r\n        Object.assign(this, item)\r\n    }\r\n}\r\n","import Shape from './Shape';\r\n\r\nexport default class Rect extends Shape {\r\n  public type = 1\r\n  constructor(item: any, index: number) {\r\n    super(item, index)\r\n  }\r\n  get ctrlsData() {\r\n    const [[x0, y0], [x1, y1]] = this.coor;\r\n    return [\r\n      [x0, y0],\r\n      [x0 + (x1 - x0) / 2, y0],\r\n      [x1, y0],\r\n      [x1, y0 + (y1 - y0) / 2],\r\n      [x1, y1],\r\n      [x0 + (x1 - x0) / 2, y1],\r\n      [x0, y1],\r\n      [x0, y0 + (y1 - y0) / 2],\r\n    ];\r\n  }\r\n}\r\n","import Shape from './Shape';\r\n\r\nexport default class Polygon extends Shape {\r\n  public type = 2\r\n  constructor(item: any, index: number) {\r\n    super(item, index)\r\n  }\r\n  get ctrlsData() {\r\n    return this.coor.length > 2 ? this.coor : [];\r\n  }\r\n}\r\n","import Shape from './Shape';\r\n\r\nexport default class Dot extends Shape {\r\n    public type = 3\r\n    constructor(item: any, index: number) {\r\n        super(item, index)\r\n    }\r\n}\r\n","export default class EventBus {\r\n    public _eventTree: Record<string, any> = {}\r\n    /**\r\n   * 注册事件\r\n   * @param eventName 事件名称\r\n   * @param cb 回调方法\r\n   */\r\n    on(eventName: string, cb: Function) {\r\n        const fns = this._eventTree[eventName];\r\n        if (Array.isArray(fns)) {\r\n            fns.push(cb);\r\n        } else {\r\n            this._eventTree[eventName] = [cb];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 触发事件\r\n     * @param eventName 事件名称\r\n     * @param payload 传递参数\r\n     */\r\n    emit(eventName: string, ...payload: any) {\r\n        const fns = this._eventTree[eventName];\r\n        if (Array.isArray(fns)) {\r\n            fns.forEach((fn) => fn(...payload));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 注销事件\r\n     * @param eventName 事件名称\r\n     * @param cb 传递参数\r\n     */\r\n    off(eventName: string, cb: Function) {\r\n        const fns = this._eventTree[eventName];\r\n        const index = fns.find((fn: Function) => fn === cb);\r\n        if (Array.isArray(fns) && index) {\r\n            fns.splice(index, 1);\r\n        }\r\n    }\r\n}\r\n","import Shape from './Shape';\r\n\r\nexport default class Line extends Shape {\r\n  public type = 4\r\n  constructor(item: any, index: number) {\r\n    super(item, index)\r\n  }\r\n  get ctrlsData() {\r\n    return this.coor.length > 1 ? this.coor : [];\r\n  }\r\n}\r\n","import Shape from './Shape';\r\n\r\nexport default class Circle extends Shape {\r\n    public type = 5\r\n    public radius = 0\r\n    constructor(item: any, index: number) {\r\n        super(item, index)\r\n        this.radius = item.radius || this.radius\r\n    }\r\n    get ctrlsData() {\r\n        const [x, y] = this.coor\r\n        return [\r\n            [x, y - this.radius],\r\n            [x + this.radius, y],\r\n            [x, y + this.radius],\r\n            [x - this.radius, y]\r\n        ]\r\n    }\r\n}\r\n","import Rect from './shape/Rect';\r\nimport Polygon from './shape/Polygon';\r\nimport Dot from './shape/Dot';\r\nimport EventBus from './EventBus';\r\nimport Line from './shape/Line';\r\nimport Circle from './shape/Circle';\r\nimport pkg from '../package.json';\r\nimport { isNested } from \"./tools\";\r\n\r\nexport type Point = [number, number];\r\nexport type AllShape = Rect | Polygon | Dot | Line | Circle;\r\n\r\nexport default class CanvasSelect extends EventBus {\r\n    /** 当前版本 */\r\n    version = pkg.version;\r\n    /** 只读模式，画布不允许任何交互 */\r\n    lock: boolean = false;\r\n    /** 只读模式，仅支持查看 */\r\n    readonly: boolean = false;\r\n    /** 最小矩形宽度 */\r\n    MIN_WIDTH = 10;\r\n    /** 最小矩形高度 */\r\n    MIN_HEIGHT = 10;\r\n    /** 最小圆形半径 */\r\n    MIN_RADIUS = 5;\r\n    /** 边线颜色 */\r\n    strokeStyle = '#0f0';\r\n    /** 填充颜色 */\r\n    fillStyle = 'rgba(0, 0, 255,0.1)';\r\n    /** 边线宽度 */\r\n    lineWidth = 1;\r\n    /** 当前选中的标注边线颜色 */\r\n    activeStrokeStyle = '#f00';\r\n    /** 当前选中的标注填充颜色 */\r\n    activeFillStyle = 'rgba(255, 0, 0,0.1)';\r\n    /** 控制点边线颜色 */\r\n    ctrlStrokeStyle = '#000';\r\n    /** 控制点填充颜色 */\r\n    ctrlFillStyle = '#fff';\r\n    /** 控制点半径 */\r\n    ctrlRadius = 3;\r\n    /** 是否隐藏标签 */\r\n    hideLabel = false;\r\n    /** 标签背景填充颜色 */\r\n    labelFillStyle = '#fff';\r\n    /** 标签字体 */\r\n    labelFont = '10px sans-serif';\r\n    /** 标签文字颜色 */\r\n    textFillStyle = '#000';\r\n    /** 标签字符最大长度，超出使用省略号 */\r\n    labelMaxLen = 10;\r\n    /** 画布宽度 */\r\n    WIDTH = 0;\r\n    /** 画布高度 */\r\n    HEIGHT = 0;\r\n\r\n    canvas: HTMLCanvasElement;\r\n\r\n    ctx: CanvasRenderingContext2D;\r\n    /** 所有标注数据 */\r\n    dataset: AllShape[] = [];\r\n\r\n    offScreen: HTMLCanvasElement;\r\n\r\n    offScreenCtx: CanvasRenderingContext2D;\r\n    /** 记录锚点距离 */\r\n    remmber: number[][];\r\n    /** 记录鼠标位置 */\r\n    mouse: Point;\r\n    /** 记录背景图鼠标位移 */\r\n    remmberOrigin: number[] = [0, 0];\r\n    /** 0 不创建，1 矩形，2 多边形，3 点，4 折线，5 圆 */\r\n    createType = 0; //\r\n    /** 控制点索引 */\r\n    ctrlIndex = -1;\r\n    /** 背景图片 */\r\n    image: HTMLImageElement = new Image();\r\n    /** 图片原始宽度 */\r\n    IMAGE_ORIGIN_WIDTH: number;\r\n    /** 图片缩放宽度 */\r\n    IMAGE_WIDTH = 0;\r\n    /** 图片原始高度 */\r\n    IMAGE_ORIGIN_HEIGHT = 0;\r\n    /** 图片缩放高度 */\r\n    IMAGE_HEIGHT = 0;\r\n    /** 原点x */\r\n    originX = 0;\r\n    /** 原点y */\r\n    originY = 0;\r\n    /** 缩放步长 */\r\n    scaleStep = 0;\r\n    /** 滚动缩放 */\r\n    scrollZoom = true;\r\n\r\n    private timer: any;\r\n    /** 最小touch双击时间 */\r\n    dblTouch = 300;\r\n    /** 记录touch双击开始时间 */\r\n    dblTouchStore = 0; //\r\n    /** 这个选项可以帮助浏览器进行内部优化 */\r\n    alpha = true;\r\n    /** 专注模式 */\r\n    focusMode = false;\r\n    /** 记录当前事件 */\r\n    private evt: MouseEvent | TouchEvent | KeyboardEvent;\r\n    /** 触控缩放时记录上一次两点距离 */\r\n    scaleTouchStore = 0;\r\n    /** 当前是否为双指触控 */\r\n    isTouch2 = false;\r\n    isMobile = navigator.userAgent.includes('Mobile');\r\n    /** 向上展示label */\r\n    labelUp = false;\r\n    /**\r\n     * @param el Valid CSS selector string, or DOM\r\n     * @param src image src\r\n     */\r\n    constructor(el: HTMLCanvasElement | string, src?: string) {\r\n        super();\r\n        this.handleLoad = this.handleLoad.bind(this);\r\n        this.handleContextmenu = this.handleContextmenu.bind(this);\r\n        this.handleMousewheel = this.handleMousewheel.bind(this);\r\n        this.handleMouseDown = this.handleMouseDown.bind(this);\r\n        this.handelMouseMove = this.handelMouseMove.bind(this);\r\n        this.handelMouseUp = this.handelMouseUp.bind(this);\r\n        this.handelDblclick = this.handelDblclick.bind(this);\r\n        this.handelKeyup = this.handelKeyup.bind(this);\r\n        const container = typeof el === 'string' ? document.querySelector(el) : el;\r\n        if (container instanceof HTMLCanvasElement) {\r\n            this.canvas = container;\r\n            this.offScreen = document.createElement('canvas');\r\n            this.initSetting();\r\n            this.initEvents();\r\n            src && this.setImage(src);\r\n        } else {\r\n            console.warn('HTMLCanvasElement is required!');\r\n        }\r\n    }\r\n\r\n    /** 当前当前选中的标注 */\r\n    get activeShape() {\r\n        return this.dataset.find(x => x.active) || {} as any;\r\n    }\r\n\r\n    /** 当前缩放比例 */\r\n    get scale() {\r\n        if (this.IMAGE_ORIGIN_WIDTH && this.IMAGE_WIDTH) {\r\n            return this.IMAGE_WIDTH / this.IMAGE_ORIGIN_WIDTH;\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    /** 图片最小边尺寸 */\r\n    get imageMin() {\r\n        return Math.min(this.IMAGE_WIDTH, this.IMAGE_HEIGHT);\r\n    }\r\n\r\n    /** 图片原始最大边尺寸 */\r\n    get imageOriginMax() {\r\n        return Math.max(this.IMAGE_ORIGIN_WIDTH, this.IMAGE_ORIGIN_HEIGHT);\r\n    }\r\n\r\n    /** 合成事件 */\r\n    mergeEvent(e: TouchEvent | MouseEvent) {\r\n        let mouseX = 0;\r\n        let mouseY = 0;\r\n        let mouseCX = 0;\r\n        let mouseCY = 0;\r\n        if (this.isMobile) {\r\n            const { clientX, clientY } = (e as TouchEvent).touches[0];\r\n            const target = e.target as HTMLCanvasElement;\r\n            const { left, top } = target.getBoundingClientRect();\r\n            mouseX = Math.round(clientX - left);\r\n            mouseY = Math.round(clientY - top);\r\n            if ((e as TouchEvent).touches.length === 2) {\r\n                const { clientX: clientX1 = 0, clientY: clientY1 = 0 } = (e as TouchEvent).touches[1] || {};\r\n                mouseCX = Math.round(Math.abs((clientX1 - clientX) / 2 + clientX) - left);\r\n                mouseCY = Math.round(Math.abs((clientY1 - clientY) / 2 + clientY) - top);\r\n            }\r\n        } else {\r\n            mouseX = (e as MouseEvent).offsetX;\r\n            mouseY = (e as MouseEvent).offsetY;\r\n        }\r\n        return { ...e, mouseX, mouseY, mouseCX, mouseCY };\r\n    }\r\n\r\n    handleLoad() {\r\n        this.emit('load', this.image.src);\r\n        this.IMAGE_ORIGIN_WIDTH = this.IMAGE_WIDTH = this.image.width;\r\n        this.IMAGE_ORIGIN_HEIGHT = this.IMAGE_HEIGHT = this.image.height;\r\n        this.fitZoom();\r\n    }\r\n\r\n    handleContextmenu(e: MouseEvent) {\r\n        e.preventDefault();\r\n        this.evt = e;\r\n        if (this.lock) return;\r\n    }\r\n\r\n    handleMousewheel(e: WheelEvent) {\r\n        e.stopPropagation();\r\n        this.evt = e;\r\n        if (this.lock || !this.scrollZoom) return;\r\n        const { mouseX, mouseY } = this.mergeEvent(e);\r\n        this.mouse = [mouseX, mouseY];\r\n        this.setScale(e.deltaY < 0, true);\r\n    }\r\n\r\n    handleMouseDown(e: MouseEvent | TouchEvent) {\r\n        e.stopPropagation();\r\n        this.evt = e;\r\n        if (this.lock) return;\r\n        const { mouseX, mouseY, mouseCX, mouseCY } = this.mergeEvent(e);\r\n        const offsetX = Math.round(mouseX / this.scale);\r\n        const offsetY = Math.round(mouseY / this.scale);\r\n        this.mouse = this.isMobile && (e as TouchEvent).touches.length === 2 ? [mouseCX, mouseCY] : [mouseX, mouseY];\r\n        this.remmberOrigin = [mouseX - this.originX, mouseY - this.originY];\r\n        if ((!this.isMobile && (e as MouseEvent).buttons === 1) || (this.isMobile && (e as TouchEvent).touches.length === 1)) { // 鼠标左键\r\n            const ctrls = this.activeShape.ctrlsData || [];\r\n            this.ctrlIndex = ctrls.findIndex((coor: Point) => this.isPointInCircle(this.mouse, coor, this.ctrlRadius));\r\n            if (this.ctrlIndex > -1) { // 点击到控制点\r\n                const [x0, y0] = ctrls[this.ctrlIndex];\r\n                this.remmber = [[offsetX - x0, offsetY - y0]];\r\n            } else if (this.isInBackground(e)) {\r\n                if (this.activeShape.creating && !this.readonly) { // 创建中\r\n                    if ([2, 4].includes(this.activeShape.type)) {\r\n                        const [x, y] = this.activeShape.coor[this.activeShape.coor.length - 1];\r\n                        if (x !== offsetX && y !== offsetY) {\r\n                            const nx = Math.round(offsetX - this.originX / this.scale);\r\n                            const ny = Math.round(offsetY - this.originY / this.scale);\r\n                            this.activeShape.coor.push([nx, ny]);\r\n                        }\r\n                    }\r\n                } else if (this.createType > 0 && !this.readonly) { // 开始创建\r\n                    let newShape;\r\n                    const nx = Math.round(offsetX - this.originX / this.scale);\r\n                    const ny = Math.round(offsetY - this.originY / this.scale);\r\n                    const curPoint: Point = [nx, ny];\r\n                    switch (this.createType) {\r\n                        case 1:\r\n                            newShape = new Rect({ coor: [curPoint, curPoint] }, this.dataset.length);\r\n                            newShape.creating = true;\r\n                            break;\r\n                        case 2:\r\n                            newShape = new Polygon({ coor: [curPoint] }, this.dataset.length);\r\n                            newShape.creating = true;\r\n                            break;\r\n                        case 3:\r\n                            newShape = new Dot({ coor: curPoint }, this.dataset.length);\r\n                            this.emit('add', newShape);\r\n                            break;\r\n                        case 4:\r\n                            newShape = new Line({ coor: [curPoint] }, this.dataset.length);\r\n                            newShape.creating = true;\r\n                            break;\r\n                        case 5:\r\n                            newShape = new Circle({ coor: curPoint }, this.dataset.length);\r\n                            newShape.creating = true;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    this.dataset.forEach((sp) => { sp.active = false; });\r\n                    newShape.active = true;\r\n                    this.dataset.push(newShape);\r\n                } else {\r\n                    // 是否点击到形状\r\n                    const [hitShapeIndex, hitShape] = this.hitOnShape(this.mouse);\r\n                    if (hitShapeIndex > -1) {\r\n                        hitShape.dragging = true;\r\n                        this.dataset.forEach((item, i) => item.active = i === hitShapeIndex);\r\n                        this.dataset.splice(hitShapeIndex, 1);\r\n                        this.dataset.push(hitShape);\r\n                        if (!this.readonly) {\r\n                            this.remmber = [];\r\n                            if ([3, 5].includes(hitShape.type)) {\r\n                                const [x, y] = hitShape.coor;\r\n                                this.remmber = [[offsetX - x, offsetY - y]];\r\n                            } else {\r\n                                hitShape.coor.forEach((pt: any) => {\r\n                                    this.remmber.push([offsetX - pt[0], offsetY - pt[1]]);\r\n                                });\r\n                            }\r\n                        }\r\n                        this.emit('select', hitShape);\r\n                    } else {\r\n                        this.activeShape.active = false;\r\n                        this.dataset.sort((a, b) => a.index - b.index);\r\n                        this.emit('select', null);\r\n                    }\r\n                }\r\n                this.update();\r\n            }\r\n        }\r\n    }\r\n\r\n    handelMouseMove(e: MouseEvent | TouchEvent) {\r\n        e.stopPropagation();\r\n        this.evt = e;\r\n        if (this.lock) return;\r\n        const { mouseX, mouseY, mouseCX, mouseCY } = this.mergeEvent(e);\r\n        const offsetX = Math.round(mouseX / this.scale);\r\n        const offsetY = Math.round(mouseY / this.scale);\r\n        this.mouse = this.isMobile && (e as TouchEvent).touches.length === 2 ? [mouseCX, mouseCY] : [mouseX, mouseY];\r\n        if (((!this.isMobile && (e as MouseEvent).buttons === 1) || (this.isMobile && (e as TouchEvent).touches.length === 1)) && this.activeShape.type) {\r\n            if (this.ctrlIndex > -1 && (this.isInBackground(e) || this.activeShape.type === 5)) {\r\n                const [[x, y]] = this.remmber;\r\n                // resize矩形\r\n                if (this.activeShape.type === 1) {\r\n                    const [[x0, y0], [x1, y1]] = this.activeShape.coor;\r\n                    let coor: Point[] = [];\r\n                    switch (this.ctrlIndex) {\r\n                        case 0:\r\n                            coor = [[offsetX - x, offsetY - y], [x1, y1]];\r\n                            break;\r\n                        case 1:\r\n                            coor = [[x0, offsetY - y], [x1, y1]];\r\n                            break;\r\n                        case 2:\r\n                            coor = [[x0, offsetY - y], [offsetX - x, y1]];\r\n                            break;\r\n                        case 3:\r\n                            coor = [[x0, y0], [offsetX - x, y1]];\r\n                            break;\r\n                        case 4:\r\n                            coor = [[x0, y0], [offsetX - x, offsetY - y]];\r\n                            break;\r\n                        case 5:\r\n                            coor = [[x0, y0], [x1, offsetY - y]];\r\n                            break;\r\n                        case 6:\r\n                            coor = [[offsetX - x, y0], [x1, offsetY - y]];\r\n                            break;\r\n                        case 7:\r\n                            coor = [[offsetX - x, y0], [x1, y1]];\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    let [[a0, b0], [a1, b1]] = coor;\r\n                    if (\r\n                        a0 < 0 ||\r\n                        a1 < 0 ||\r\n                        b0 < 0 ||\r\n                        b1 < 0 ||\r\n                        a1 > this.IMAGE_ORIGIN_WIDTH ||\r\n                        b1 > this.IMAGE_ORIGIN_HEIGHT\r\n                    ) {\r\n                        // 偶然触发 超出边界处理\r\n                        a0 < 0 && (a0 = 0);\r\n                        a1 < 0 && (a1 = 0);\r\n                        b0 < 0 && (b0 = 0);\r\n                        b1 < 0 && (b1 = 0);\r\n                        if (a1 > this.IMAGE_ORIGIN_WIDTH) {\r\n                            a1 = this.IMAGE_ORIGIN_WIDTH;\r\n                        }\r\n                        if (b1 > this.IMAGE_ORIGIN_HEIGHT) {\r\n                            b1 = this.IMAGE_ORIGIN_HEIGHT;\r\n                        }\r\n                    }\r\n\r\n                    if (a1 - a0 >= this.MIN_WIDTH && b1 - b0 >= this.MIN_HEIGHT) {\r\n                        this.activeShape.coor = [[a0, b0], [a1, b1]];\r\n                    } else {\r\n                        this.emit('warn', `Width cannot be less than ${this.MIN_WIDTH},Height cannot be less than${this.MIN_HEIGHT}。`);\r\n                    }\r\n                } else if ([2, 4].includes(this.activeShape.type)) {\r\n                    const nx = Math.round(offsetX - this.originX / this.scale);\r\n                    const ny = Math.round(offsetY - this.originY / this.scale);\r\n                    const newPoint = [nx, ny];\r\n                    this.activeShape.coor.splice(this.ctrlIndex, 1, newPoint);\r\n                } else if (this.activeShape.type === 5) {\r\n                    const nx = Math.round(offsetX - this.originX / this.scale);\r\n                    const newRadius = nx - this.activeShape.coor[0];\r\n                    if (newRadius >= this.MIN_RADIUS) this.activeShape.radius = newRadius;\r\n                }\r\n            } else if (this.activeShape.dragging && !this.readonly) { // 拖拽\r\n                let coor = [];\r\n                let noLimit = true;\r\n                const w = this.IMAGE_ORIGIN_WIDTH || this.WIDTH;\r\n                const h = this.IMAGE_ORIGIN_HEIGHT || this.HEIGHT;\r\n                if ([3, 5].includes(this.activeShape.type)) {\r\n                    const [t1, t2] = this.remmber[0];\r\n                    const x = offsetX - t1;\r\n                    const y = offsetY - t2;\r\n                    if (x < 0 || x > w || y < 0 || y > h) noLimit = false;\r\n                    coor = [x, y];\r\n                } else {\r\n                    for (let i = 0; i < this.activeShape.coor.length; i++) {\r\n                        const tar = this.remmber[i];\r\n                        const x = offsetX - tar[0];\r\n                        const y = offsetY - tar[1];\r\n                        if (x < 0 || x > w || y < 0 || y > h) noLimit = false;\r\n                        coor.push([x, y]);\r\n                    }\r\n                }\r\n                if (noLimit) this.activeShape.coor = coor;\r\n            } else if (this.activeShape.creating && this.isInBackground(e)) {\r\n                const x = Math.round(offsetX - this.originX / this.scale);\r\n                const y = Math.round(offsetY - this.originY / this.scale);\r\n                // 创建矩形\r\n                if (this.activeShape.type === 1) {\r\n                    this.activeShape.coor.splice(1, 1, [x, y]);\r\n                } else if (this.activeShape.type === 5) {\r\n                    const [x0, y0] = this.activeShape.coor;\r\n                    const r = Math.sqrt((x0 - x) ** 2 + (y0 - y) ** 2);\r\n                    this.activeShape.radius = r;\r\n                }\r\n            }\r\n            this.update();\r\n        } else if ([2, 4].includes(this.activeShape.type) && this.activeShape.creating) {\r\n            // 多边形添加点\r\n            this.update();\r\n        } else if ((!this.isMobile && (e as MouseEvent).buttons === 2 && (e as MouseEvent).which === 3) || (this.isMobile && (e as TouchEvent).touches.length === 1 && !this.isTouch2)) {\r\n            // 拖动背景\r\n            this.originX = Math.round(mouseX - this.remmberOrigin[0]);\r\n            this.originY = Math.round(mouseY - this.remmberOrigin[1]);\r\n            this.update();\r\n        } else if (this.isMobile && (e as TouchEvent).touches.length === 2) {\r\n            this.isTouch2 = true;\r\n            const touch0 = (e as TouchEvent).touches[0];\r\n            const touch1 = (e as TouchEvent).touches[1];\r\n            const cur = this.scaleTouchStore;\r\n            this.scaleTouchStore = Math.abs((touch1.clientX - touch0.clientX) * (touch1.clientY - touch0.clientY));\r\n            this.setScale(this.scaleTouchStore > cur, true);\r\n        }\r\n    }\r\n\r\n    handelMouseUp(e: MouseEvent | TouchEvent) {\r\n        e.stopPropagation();\r\n        this.evt = e;\r\n        if (this.lock) return;\r\n        if (this.isMobile) {\r\n            if ((e as TouchEvent).touches.length === 0) {\r\n                this.isTouch2 = false;\r\n            }\r\n            if ((Date.now() - this.dblTouchStore) < this.dblTouch) {\r\n                this.handelDblclick(e);\r\n                return;\r\n            }\r\n            this.dblTouchStore = Date.now();\r\n        }\r\n        this.remmber = [];\r\n        if (this.activeShape.type) {\r\n            this.activeShape.dragging = false;\r\n            if (this.activeShape.creating) {\r\n                if (this.activeShape.type === 1) {\r\n                    const [[x0, y0], [x1, y1]] = this.activeShape.coor;\r\n                    if (Math.abs(x0 - x1) < this.MIN_WIDTH || Math.abs(y0 - y1) < this.MIN_HEIGHT) {\r\n                        this.dataset.pop();\r\n                        this.emit('warn', `Width cannot be less than ${this.MIN_WIDTH},Height cannot be less than ${this.MIN_HEIGHT}`);\r\n                    } else {\r\n                        this.activeShape.coor = [[Math.min(x0, x1), Math.min(y0, y1)], [Math.max(x0, x1), Math.max(y0, y1)]];\r\n                        this.activeShape.creating = false;\r\n                        this.emit('add', this.activeShape);\r\n                    }\r\n                } else if (this.activeShape.type === 5) {\r\n                    if (this.activeShape.radius < this.MIN_RADIUS) {\r\n                        this.dataset.pop();\r\n                        this.emit('warn', `Radius cannot be less than ${this.MIN_WIDTH}`);\r\n                    } else {\r\n                        this.activeShape.creating = false;\r\n                        this.emit('add', this.activeShape);\r\n                    }\r\n                }\r\n                this.update();\r\n            }\r\n        }\r\n    }\r\n\r\n    handelDblclick(e: MouseEvent | TouchEvent) {\r\n        e.stopPropagation();\r\n        this.evt = e;\r\n        if (this.lock) return;\r\n        if ([2, 4].includes(this.activeShape.type)) {\r\n            if ((this.activeShape.type === 2 && this.activeShape.coor.length > 2) ||\r\n                (this.activeShape.type === 4 && this.activeShape.coor.length > 1)\r\n            ) {\r\n                this.emit('add', this.activeShape);\r\n                this.activeShape.creating = false;\r\n                this.update();\r\n            }\r\n        }\r\n    }\r\n\r\n    handelKeyup(e: KeyboardEvent) {\r\n        console.log(\"handelKeyup\", e.key)\r\n        e.stopPropagation();\r\n        this.evt = e;\r\n        if (this.lock || document.activeElement !== document.body || this.readonly) return;\r\n        if (this.activeShape.type) {\r\n            if ([2, 4].includes(this.activeShape.type) && e.key === 'Escape') {\r\n                if (this.activeShape.coor.length > 1 && this.activeShape.creating) {\r\n                    this.activeShape.coor.pop();\r\n                } else {\r\n                    this.deleteByIndex(this.activeShape.index);\r\n                }\r\n                this.update();\r\n            } else if (e.key === 'Delete') {\r\n                console.log(\"Delete\")\r\n                this.deleteByIndex(this.activeShape.index);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** 初始化配置 */\r\n    initSetting() {\r\n        const dpr = window.devicePixelRatio || 1;\r\n        this.canvas.style.userSelect = 'none';\r\n        this.ctx = this.ctx || this.canvas.getContext('2d', { alpha: this.alpha });\r\n        this.WIDTH = this.canvas.clientWidth;\r\n        this.HEIGHT = this.canvas.clientHeight;\r\n        this.canvas.width = this.WIDTH * dpr;\r\n        this.canvas.height = this.HEIGHT * dpr;\r\n        this.canvas.style.width = this.WIDTH + 'px';\r\n        this.canvas.style.height = this.HEIGHT + 'px';\r\n        this.offScreen.width = this.WIDTH;\r\n        this.offScreen.height = this.HEIGHT;\r\n        this.offScreenCtx = this.offScreenCtx || this.offScreen.getContext('2d', { willReadFrequently: true });\r\n        this.ctx.scale(dpr, dpr);\r\n    }\r\n\r\n    /** 初始化事件 */\r\n    initEvents() {\r\n        this.image.addEventListener('load', this.handleLoad);\r\n        this.canvas.addEventListener('touchstart', this.handleMouseDown);\r\n        this.canvas.addEventListener('touchmove', this.handelMouseMove);\r\n        this.canvas.addEventListener('touchend', this.handelMouseUp);\r\n        this.canvas.addEventListener('contextmenu', this.handleContextmenu);\r\n        this.canvas.addEventListener('mousewheel', this.handleMousewheel);\r\n        this.canvas.addEventListener('mousedown', this.handleMouseDown);\r\n        this.canvas.addEventListener('mousemove', this.handelMouseMove);\r\n        this.canvas.addEventListener('mouseup', this.handelMouseUp);\r\n        this.canvas.addEventListener('dblclick', this.handelDblclick);\r\n        document.body.addEventListener('keyup', this.handelKeyup, true);\r\n    }\r\n\r\n    /**\r\n     * 添加/切换图片\r\n     * @param url 图片链接\r\n     */\r\n    setImage(url: string) {\r\n        this.image.src = url;\r\n    }\r\n\r\n    /**\r\n     * 设置数据\r\n     * @param data Array\r\n     */\r\n    setData(data: AllShape[]) {\r\n        setTimeout(() => {\r\n            const initdata: AllShape[] = [];\r\n            data.forEach((item, index) => {\r\n                if (Object.prototype.toString.call(item).includes('Object')) {\r\n                    let shape: AllShape;\r\n                    switch (item.type) {\r\n                        case 1:\r\n                            shape = new Rect(item, index);\r\n                            break;\r\n                        case 2:\r\n                            shape = new Polygon(item, index);\r\n                            break;\r\n                        case 3:\r\n                            shape = new Dot(item, index);\r\n                            break;\r\n                        case 4:\r\n                            shape = new Line(item, index);\r\n                            break;\r\n                        case 5:\r\n                            shape = new Circle(item, index);\r\n                            break;\r\n                        default:\r\n                            console.warn('Invalid shape', item);\r\n                            break;\r\n                    }\r\n                    [1, 2, 3, 4, 5].includes(item.type) && initdata.push(shape);\r\n                } else {\r\n                    console.warn('Shape must be an enumerable Object.', item);\r\n                }\r\n            });\r\n            this.dataset = initdata;\r\n            this.update();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 判断是否在标注实例上\r\n     * @param mousePoint 点击位置\r\n     * @returns\r\n     */\r\n    hitOnShape(mousePoint: Point): [number, AllShape] {\r\n        let hitShapeIndex = -1;\r\n        let hitShape: AllShape;\r\n        for (let i = this.dataset.length - 1; i > -1; i--) {\r\n            const shape = this.dataset[i];\r\n            if (\r\n                (shape.type === 3 && this.isPointInCircle(mousePoint, shape.coor as Point, this.ctrlRadius)) ||\r\n                (shape.type === 5 && this.isPointInCircle(mousePoint, shape.coor as Point, (shape as Circle).radius * this.scale)) ||\r\n                (shape.type === 1 && this.isPointInRect(mousePoint, (shape as Rect).coor)) ||\r\n                (shape.type === 2 && this.isPointInPolygon(mousePoint, (shape as Polygon).coor)) ||\r\n                (shape.type === 4 && this.isPointInLine(mousePoint, (shape as Line).coor))\r\n            ) {\r\n                if (this.focusMode && !shape.active) continue;\r\n                hitShapeIndex = i;\r\n                hitShape = shape;\r\n                break;\r\n            }\r\n        }\r\n        return [hitShapeIndex, hitShape];\r\n    }\r\n\r\n    /**\r\n     * 判断鼠标是否在背景图内部\r\n     * @param e MouseEvent\r\n     * @returns 布尔值\r\n     */\r\n    isInBackground(e: MouseEvent | TouchEvent): boolean {\r\n        const { mouseX, mouseY } = this.mergeEvent(e);\r\n        return mouseX >= this.originX &&\r\n            mouseY >= this.originY &&\r\n            mouseX <= this.originX + this.IMAGE_ORIGIN_WIDTH * this.scale &&\r\n            mouseY <= this.originY + this.IMAGE_ORIGIN_HEIGHT * this.scale;\r\n    }\r\n\r\n    /**\r\n     * 判断是否在矩形内\r\n     * @param point 坐标\r\n     * @param coor 区域坐标\r\n     * @returns 布尔值\r\n     */\r\n    isPointInRect(point: Point, coor: Point[]): boolean {\r\n        const [x, y] = point;\r\n        const [[x0, y0], [x1, y1]] = coor.map((a) => a.map((b) => b * this.scale));\r\n        return x0 + this.originX <= x &&\r\n            x <= x1 + this.originX &&\r\n            y0 + this.originY <= y &&\r\n            y <= y1 + this.originY;\r\n    }\r\n\r\n    /**\r\n     * 判断是否在多边形内\r\n     * @param point 坐标\r\n     * @param coor 区域坐标\r\n     * @returns 布尔值\r\n     */\r\n    isPointInPolygon(point: Point, coor: Point[]): boolean {\r\n        this.offScreenCtx.save();\r\n        this.offScreenCtx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\r\n        this.offScreenCtx.translate(this.originX, this.originY);\r\n        this.offScreenCtx.beginPath();\r\n        coor.forEach((pt, i) => {\r\n            const [x, y] = pt.map((a) => Math.round(a * this.scale));\r\n            if (i === 0) {\r\n                this.offScreenCtx.moveTo(x, y);\r\n            } else {\r\n                this.offScreenCtx.lineTo(x, y);\r\n            }\r\n        });\r\n        this.offScreenCtx.closePath();\r\n        this.offScreenCtx.fill();\r\n        const areaData = this.offScreenCtx.getImageData(0, 0, this.WIDTH, this.HEIGHT);\r\n        const index = (point[1] - 1) * this.WIDTH * 4 + point[0] * 4;\r\n        this.offScreenCtx.restore();\r\n        return areaData.data[index + 3] !== 0;\r\n    }\r\n\r\n    /**\r\n     * 判断是否在圆内\r\n     * @param point 坐标\r\n     * @param center 圆心\r\n     * @param r 半径\r\n     * @param needScale 是否为圆形点击检测\r\n     * @returns 布尔值\r\n     */\r\n    isPointInCircle(point: Point, center: Point, r: number): boolean {\r\n        const [x, y] = point;\r\n        const [x0, y0] = center.map((a) => a * this.scale);\r\n        const distance = Math.sqrt((x0 + this.originX - x) ** 2 + (y0 + this.originY - y) ** 2);\r\n        return distance <= r;\r\n    }\r\n\r\n    /**\r\n     * 判断是否在折线内\r\n     * @param point 坐标\r\n     * @param coor 区域坐标\r\n     * @returns 布尔值\r\n     */\r\n    isPointInLine(point: Point, coor: Point[]): boolean {\r\n        this.offScreenCtx.save();\r\n        this.offScreenCtx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\r\n        this.offScreenCtx.translate(this.originX, this.originY);\r\n        this.offScreenCtx.lineWidth = 5;\r\n        this.offScreenCtx.beginPath();\r\n        coor.forEach((pt, i) => {\r\n            const [x, y] = pt.map((a) => Math.round(a * this.scale));\r\n            if (i === 0) {\r\n                this.offScreenCtx.moveTo(x, y);\r\n            } else {\r\n                this.offScreenCtx.lineTo(x, y);\r\n            }\r\n        });\r\n        this.offScreenCtx.stroke();\r\n        const areaData = this.offScreenCtx.getImageData(0, 0, this.WIDTH, this.HEIGHT);\r\n        const index = (point[1] - 1) * this.WIDTH * 4 + point[0] * 4;\r\n        this.offScreenCtx.restore();\r\n        return areaData.data[index + 3] !== 0;\r\n    }\r\n\r\n    /**\r\n       * 判断是图形是否属于嵌套关系 (目前只支持矩形和多边形)\r\n       * @param shape1 标注实例\r\n       * @param shape2 标注实例\r\n       * @returns 布尔值\r\n       */\r\n    isNested(shape1: Rect | Polygon, shape2: Rect | Polygon): boolean {\r\n        return isNested(shape1, shape2);\r\n    }\r\n\r\n    /**\r\n     * 绘制矩形\r\n     * @param shape 标注实例\r\n     * @returns\r\n     */\r\n    drawRect(shape: Rect) {\r\n        if (shape.coor.length !== 2) return;\r\n        const { strokeStyle, fillStyle, active, creating, coor, lineWidth } = shape;\r\n        const [[x0, y0], [x1, y1]] = coor.map((a: Point) => a.map((b) => Math.round(b * this.scale)));\r\n        this.ctx.save();\r\n        this.ctx.lineWidth = lineWidth || this.lineWidth;\r\n        this.ctx.fillStyle = fillStyle || this.fillStyle;\r\n        this.ctx.strokeStyle = (active || creating) ? this.activeStrokeStyle : (strokeStyle || this.strokeStyle);\r\n        const w = x1 - x0;\r\n        const h = y1 - y0;\r\n        if (!creating) this.ctx.fillRect(x0, y0, w, h);\r\n        this.ctx.strokeRect(x0, y0, w, h);\r\n        this.ctx.restore();\r\n        this.drawLabel(coor[0], shape);\r\n    }\r\n\r\n    /**\r\n     * 绘制多边形\r\n     * @param shape 标注实例\r\n     */\r\n    drawPolygon(shape: Polygon) {\r\n        const { strokeStyle, fillStyle, active, creating, coor, lineWidth } = shape;\r\n        this.ctx.save();\r\n        this.ctx.lineJoin = 'round';\r\n        this.ctx.lineWidth = lineWidth || this.lineWidth;\r\n        this.ctx.fillStyle = fillStyle || this.fillStyle;\r\n        this.ctx.strokeStyle = (active || creating) ? this.activeStrokeStyle : (strokeStyle || this.strokeStyle);\r\n        this.ctx.beginPath();\r\n        coor.forEach((el: Point, i) => {\r\n            const [x, y] = el.map((a) => Math.round(a * this.scale));\r\n            if (i === 0) {\r\n                this.ctx.moveTo(x, y);\r\n            } else {\r\n                this.ctx.lineTo(x, y);\r\n            }\r\n        });\r\n        if (creating) {\r\n            const [x, y] = this.mouse || [];\r\n            this.ctx.lineTo(x - this.originX, y - this.originY);\r\n        } else if (coor.length > 2) {\r\n            this.ctx.closePath();\r\n        }\r\n        this.ctx.fill();\r\n        this.ctx.stroke();\r\n        this.ctx.restore();\r\n        this.drawLabel(coor[0], shape);\r\n    }\r\n\r\n    /**\r\n     * 绘制点\r\n     * @param shape 标注实例\r\n     */\r\n    drawDot(shape: Dot) {\r\n        const { strokeStyle, fillStyle, active, coor, lineWidth } = shape;\r\n        const [x, y] = coor.map((a) => a * this.scale);\r\n        this.ctx.save();\r\n        this.ctx.lineWidth = lineWidth || this.lineWidth;\r\n        this.ctx.fillStyle = fillStyle || this.ctrlFillStyle;\r\n        this.ctx.strokeStyle = active ? this.activeStrokeStyle : (strokeStyle || this.strokeStyle);\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\r\n        this.ctx.fill();\r\n        this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\r\n        this.ctx.stroke();\r\n        this.ctx.restore();\r\n        this.drawLabel(coor as Point, shape);\r\n    }\r\n\r\n    /**\r\n     * 绘制圆\r\n     * @param shape 标注实例\r\n     */\r\n    drawCirle(shape: Circle) {\r\n        const { strokeStyle, fillStyle, active, coor, label, creating, radius, ctrlsData, lineWidth } = shape;\r\n        const [x, y] = coor.map((a) => a * this.scale);\r\n        this.ctx.save();\r\n        this.ctx.lineWidth = lineWidth || this.lineWidth;\r\n        this.ctx.fillStyle = fillStyle || this.fillStyle;\r\n        this.ctx.strokeStyle = (active || creating) ? this.activeStrokeStyle : (strokeStyle || this.strokeStyle);\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(x, y, radius * this.scale, 0, 2 * Math.PI, true);\r\n        this.ctx.fill();\r\n        this.ctx.arc(x, y, radius * this.scale, 0, 2 * Math.PI, true);\r\n        this.ctx.stroke();\r\n        this.ctx.restore();\r\n        this.drawLabel(ctrlsData[0] as Point, shape);\r\n    }\r\n\r\n    /**\r\n     * 绘制折线\r\n     * @param shape 标注实例\r\n     */\r\n    drawLine(shape: Line) {\r\n        const { strokeStyle, active, creating, coor, lineWidth } = shape;\r\n        this.ctx.save();\r\n        this.ctx.lineJoin = 'round';\r\n        this.ctx.lineWidth = lineWidth || this.lineWidth;\r\n        this.ctx.strokeStyle = (active || creating) ? this.activeStrokeStyle : (strokeStyle || this.strokeStyle);\r\n        this.ctx.beginPath();\r\n        coor.forEach((el: Point, i) => {\r\n            const [x, y] = el.map((a) => Math.round(a * this.scale));\r\n            if (i === 0) {\r\n                this.ctx.moveTo(x, y);\r\n            } else {\r\n                this.ctx.lineTo(x, y);\r\n            }\r\n        });\r\n        if (creating) {\r\n            const [x, y] = this.mouse || [];\r\n            this.ctx.lineTo(x - this.originX, y - this.originY);\r\n        }\r\n        this.ctx.stroke();\r\n        this.ctx.restore();\r\n        this.drawLabel(coor[0], shape);\r\n    }\r\n\r\n    /**\r\n     * 绘制控制点\r\n     * @param point 坐标\r\n     */\r\n    drawCtrl(point: Point) {\r\n        const [x, y] = point.map((a) => a * this.scale);\r\n        this.ctx.save();\r\n        this.ctx.beginPath();\r\n        this.ctx.fillStyle = this.ctrlFillStyle;\r\n        this.ctx.strokeStyle = this.ctrlStrokeStyle;\r\n        this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\r\n        this.ctx.fill();\r\n        this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\r\n        this.ctx.stroke();\r\n        this.ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * 绘制控制点列表\r\n     * @param shape 标注实例\r\n     */\r\n    drawCtrlList(shape: Rect | Polygon | Line) {\r\n        shape.ctrlsData.forEach((point, i) => {\r\n            if (shape.type === 5) {\r\n                if (i === 1) this.drawCtrl(point);\r\n            } else {\r\n                this.drawCtrl(point);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 绘制label\r\n     * @param point 位置\r\n     * @param label 文本\r\n     */\r\n    drawLabel(point: Point, shape: AllShape) {\r\n        const { label = '', labelFillStyle = '', labelFont = '', textFillStyle = '', hideLabel, labelUp, lineWidth } = shape;\r\n        const isHideLabel = typeof hideLabel === 'boolean' ? hideLabel : this.hideLabel;\r\n        const isLabelUp = typeof labelUp === 'boolean' ? labelUp : this.labelUp;\r\n        const currLineWidth = lineWidth || this.lineWidth;\r\n\r\n        if (label.length && !isHideLabel) {\r\n            this.ctx.font = labelFont || this.labelFont;\r\n            const textPaddingLeft = 4;\r\n            const textPaddingTop = 4;\r\n            const newText = label.length < this.labelMaxLen + 1 ? label : `${label.slice(0, this.labelMaxLen)}...`;\r\n            const text = this.ctx.measureText(newText);\r\n            const font = parseInt(this.ctx.font) - 4;\r\n            const labelWidth = text.width + textPaddingLeft * 2;\r\n            const labelHeight = font + textPaddingTop * 2;\r\n            const [x, y] = point.map((a) => a * this.scale);\r\n            const toleft = (this.IMAGE_ORIGIN_WIDTH - point[0]) < labelWidth / this.scale;\r\n            const toTop = (this.IMAGE_ORIGIN_HEIGHT - point[1]) < labelHeight / this.scale;\r\n            const toTop2 = point[1] > labelHeight / this.scale;\r\n            const isup = isLabelUp ? toTop2 : toTop;\r\n            this.ctx.save();\r\n            this.ctx.fillStyle = labelFillStyle || this.labelFillStyle;\r\n            this.ctx.fillRect(toleft ? (x - text.width - textPaddingLeft - currLineWidth / 2) : (x + currLineWidth / 2), isup ? (y - labelHeight - currLineWidth / 2) : (y + currLineWidth / 2), labelWidth, labelHeight);\r\n            this.ctx.fillStyle = textFillStyle || this.textFillStyle;\r\n            this.ctx.fillText(newText, toleft ? (x - text.width) : (x + textPaddingLeft + currLineWidth / 2), isup ? (y - labelHeight + font + textPaddingTop) : (y + font + textPaddingTop + currLineWidth / 2), 180);\r\n            this.ctx.restore();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新画布\r\n     */\r\n    update() {\r\n        window.cancelAnimationFrame(this.timer);\r\n        this.timer = window.requestAnimationFrame(() => {\r\n            this.ctx.save();\r\n            this.ctx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\r\n            this.ctx.translate(this.originX, this.originY);\r\n            if (this.IMAGE_WIDTH && this.IMAGE_HEIGHT) {\r\n                this.ctx.drawImage(this.image, 0, 0, this.IMAGE_WIDTH, this.IMAGE_HEIGHT);\r\n            }\r\n            const renderList = this.focusMode ? (this.activeShape.type ? [this.activeShape] : []) : this.dataset;\r\n            for (let i = 0; i < renderList.length; i++) {\r\n                const shape = renderList[i];\r\n                if (shape.hide) continue;\r\n                switch (shape.type) {\r\n                    case 1:\r\n                        this.drawRect(shape as Rect);\r\n                        break;\r\n                    case 2:\r\n                        this.drawPolygon(shape as Polygon);\r\n                        break;\r\n                    case 3:\r\n                        this.drawDot(shape as Dot);\r\n                        break;\r\n                    case 4:\r\n                        this.drawLine(shape as Line);\r\n                        break;\r\n                    case 5:\r\n                        this.drawCirle(shape as Circle);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            if ([1, 2, 4, 5].includes(this.activeShape.type) && !this.activeShape.hide) {\r\n                this.drawCtrlList(this.activeShape);\r\n            }\r\n            this.ctx.restore();\r\n            this.emit('updated', this.dataset);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 删除指定矩形\r\n     * @param index number\r\n     */\r\n    deleteByIndex(index: number) {\r\n        const num = this.dataset.findIndex((x) => x.index === index);\r\n        if (num > -1) {\r\n            this.emit('delete', this.dataset[num]);\r\n            this.dataset.splice(num, 1);\r\n            this.dataset.forEach((item, i) => { item.index = i; });\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 计算缩放步长\r\n     */\r\n    calcStep(flag = '') {\r\n        if (this.IMAGE_WIDTH < this.WIDTH && this.IMAGE_HEIGHT < this.HEIGHT) {\r\n            if (flag === '' || flag === 'b') {\r\n                this.setScale(true, false, true);\r\n                this.calcStep('b');\r\n            }\r\n        }\r\n        if (this.IMAGE_WIDTH > this.WIDTH || this.IMAGE_HEIGHT > this.HEIGHT) {\r\n            if (flag === '' || flag === 's') {\r\n                this.setScale(false, false, true);\r\n                this.calcStep('s');\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 缩放\r\n     * @param type true放大5%，false缩小5%\r\n     * @param center 缩放中心 center|mouse\r\n     * @param pure 不绘制\r\n     */\r\n    setScale(type: boolean, byMouse = false, pure = false) {\r\n        if (this.lock) return;\r\n        if ((!type && this.imageMin < 20) || (type && this.IMAGE_WIDTH > this.imageOriginMax * 100)) return;\r\n        if (type) { this.scaleStep++; } else { this.scaleStep--; }\r\n        let realToLeft = 0;\r\n        let realToRight = 0;\r\n        const [x, y] = this.mouse || [];\r\n        if (byMouse) {\r\n            realToLeft = (x - this.originX) / this.scale;\r\n            realToRight = (y - this.originY) / this.scale;\r\n        }\r\n        const abs = Math.abs(this.scaleStep);\r\n        const width = this.IMAGE_WIDTH;\r\n        this.IMAGE_WIDTH = Math.round(this.IMAGE_ORIGIN_WIDTH * (this.scaleStep >= 0 ? 1.05 : 0.95) ** abs);\r\n        this.IMAGE_HEIGHT = Math.round(this.IMAGE_ORIGIN_HEIGHT * (this.scaleStep >= 0 ? 1.05 : 0.95) ** abs);\r\n        if (byMouse) {\r\n            this.originX = x - realToLeft * this.scale;\r\n            this.originY = y - realToRight * this.scale;\r\n        } else {\r\n            const scale = this.IMAGE_WIDTH / width;\r\n            this.originX = this.WIDTH / 2 - (this.WIDTH / 2 - this.originX) * scale;\r\n            this.originY = this.HEIGHT / 2 - (this.HEIGHT / 2 - this.originY) * scale;\r\n        }\r\n        if (!pure) {\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 适配背景图\r\n     */\r\n    fitZoom() {\r\n        this.calcStep();\r\n        if (this.IMAGE_HEIGHT / this.IMAGE_WIDTH >= this.HEIGHT / this.WIDTH) {\r\n            this.IMAGE_WIDTH = this.IMAGE_ORIGIN_WIDTH / (this.IMAGE_ORIGIN_HEIGHT / this.HEIGHT);\r\n            this.IMAGE_HEIGHT = this.HEIGHT;\r\n        } else {\r\n            this.IMAGE_WIDTH = this.WIDTH;\r\n            this.IMAGE_HEIGHT = this.IMAGE_ORIGIN_HEIGHT / (this.IMAGE_ORIGIN_WIDTH / this.WIDTH);\r\n        }\r\n        this.originX = (this.WIDTH - this.IMAGE_WIDTH) / 2;\r\n        this.originY = (this.HEIGHT - this.IMAGE_HEIGHT) / 2;\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * 设置专注模式\r\n     * @param type {boolean}\r\n     */\r\n    setFocusMode(type: boolean) {\r\n        this.focusMode = type;\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    destroy() {\r\n        this.image.removeEventListener('load', this.handleLoad);\r\n        this.canvas.removeEventListener('contextmenu', this.handleContextmenu);\r\n        this.canvas.removeEventListener('mousewheel', this.handleMousewheel);\r\n        this.canvas.removeEventListener('mousedown', this.handleMouseDown);\r\n        this.canvas.removeEventListener('touchend', this.handleMouseDown);\r\n        this.canvas.removeEventListener('mousemove', this.handelMouseMove);\r\n        this.canvas.removeEventListener('touchmove', this.handelMouseMove);\r\n        this.canvas.removeEventListener('mouseup', this.handelMouseUp);\r\n        this.canvas.removeEventListener('touchend', this.handelMouseUp);\r\n        this.canvas.removeEventListener('dblclick', this.handelDblclick);\r\n        document.body.removeEventListener('keyup', this.handelKeyup, true);\r\n        this.canvas.width = this.WIDTH;\r\n        this.canvas.height = this.HEIGHT;\r\n        this.canvas.style.width = null;\r\n        this.canvas.style.height = null;\r\n        this.canvas.style.userSelect = null;\r\n    }\r\n\r\n    /**\r\n     * 重新设置画布大小\r\n     */\r\n    resize() {\r\n        this.canvas.width = null;\r\n        this.canvas.height = null;\r\n        this.canvas.style.width = null;\r\n        this.canvas.style.height = null;\r\n        this.initSetting();\r\n        this.update();\r\n    }\r\n}\r\n"],"names":["isPointInPolygon","x","y","vertices","inside","n","length","i","j","xi","yi","xj","yj","Shape","item","index","this","label","coor","active","creating","dragging","uuid","s","hexDigits","m","Math","floor","random","slice","join","createUuid","Object","assign","Rect","_super","_this","call","type","__extends","defineProperty","prototype","get","_a","__read","_b","x0","y0","_c","x1","y1","Polygon","Dot","EventBus","_eventTree","on","eventName","cb","fns","Array","isArray","push","emit","payload","_i","arguments","forEach","fn","apply","__spreadArray","off","find","splice","Line","Circle","radius","CanvasSelect","el","src","version","pkg","lock","readonly","MIN_WIDTH","MIN_HEIGHT","MIN_RADIUS","strokeStyle","fillStyle","lineWidth","activeStrokeStyle","activeFillStyle","ctrlStrokeStyle","ctrlFillStyle","ctrlRadius","hideLabel","labelFillStyle","labelFont","textFillStyle","labelMaxLen","WIDTH","HEIGHT","dataset","remmberOrigin","createType","ctrlIndex","image","Image","IMAGE_WIDTH","IMAGE_ORIGIN_HEIGHT","IMAGE_HEIGHT","originX","originY","scaleStep","scrollZoom","dblTouch","dblTouchStore","alpha","focusMode","scaleTouchStore","isTouch2","isMobile","navigator","userAgent","includes","labelUp","handleLoad","bind","handleContextmenu","handleMousewheel","handleMouseDown","handelMouseMove","handelMouseUp","handelDblclick","handelKeyup","container","document","querySelector","HTMLCanvasElement","canvas","offScreen","createElement","initSetting","initEvents","setImage","console","warn","IMAGE_ORIGIN_WIDTH","min","max","mergeEvent","e","mouseX","mouseY","mouseCX","mouseCY","touches","clientX","clientY","target","getBoundingClientRect","left","top_1","top","round","_d","clientX1","_e","clientY1","abs","offsetX","offsetY","__assign","width","height","fitZoom","preventDefault","evt","stopPropagation","mouse","setScale","deltaY","scale","buttons","ctrls","activeShape","ctrlsData","findIndex","isPointInCircle","remmber","isInBackground","nx","ny","newShape","curPoint","sp","hitOnShape","hitShapeIndex_1","hitShape","pt","sort","a","b","update","_f","_g","_h","a0","b0","_j","a1","b1","concat","newPoint","newRadius","noLimit","w","h","_k","t1","tar","_l","r","sqrt","pow","which","touch0","touch1","cur","Date","now","pop","log","key","activeElement","body","deleteByIndex","dpr","window","devicePixelRatio","style","userSelect","ctx","getContext","clientWidth","clientHeight","offScreenCtx","willReadFrequently","addEventListener","url","setData","data","setTimeout","initdata","toString","shape","mousePoint","hitShapeIndex","isPointInRect","isPointInLine","point","map","save","clearRect","translate","beginPath","moveTo","lineTo","closePath","fill","areaData","getImageData","restore","center","stroke","isNested","shape1","shape2","x2","y2","x3","y3","x4","y4","vertices1","vertices2","_m","drawRect","fillRect","strokeRect","drawLabel","drawPolygon","lineJoin","drawDot","arc","PI","drawCirle","drawLine","drawCtrl","drawCtrlList","isHideLabel","isLabelUp","currLineWidth","font","newText","text","measureText","parseInt","labelWidth","textPaddingLeft","labelHeight","textPaddingTop","toleft","toTop","toTop2","isup","fillText","cancelAnimationFrame","timer","requestAnimationFrame","drawImage","renderList","hide","num","calcStep","flag","byMouse","pure","imageMin","imageOriginMax","realToLeft","realToRight","setFocusMode","destroy","removeEventListener","resize"],"mappings":"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"}